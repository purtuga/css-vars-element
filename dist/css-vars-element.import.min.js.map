{"version":3,"sources":["webpack://__LIB/webpack/bootstrap","webpack://__LIB/external \"(Set.Set = Set)\"","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/getGlobal.js","webpack://__LIB/external \"(WeakMap.WeakMap = WeakMap)\"","webpack://__LIB/external \"(Symbol.Symbol = Symbol)\"","webpack://__LIB/(webpack)/buildin/global.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/objectExtend.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/runtime-aliases.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/nextTick.js","webpack://__LIB/./node_modules/observables/src/objectWatchProp.js","webpack://__LIB/./node_modules/common-micro-libs/src/domutils/domAddEventListener.js","webpack://__LIB/./node_modules/common-micro-libs/src/domutils/domFind.js","webpack://__LIB/./node_modules/common-micro-libs/src/jsutils/dataStore.js","webpack://__LIB/./node_modules/component-element/src/utils.js","webpack://__LIB/./node_modules/component-element/src/polyfill-support.js","webpack://__LIB/./node_modules/component-element/src/ComponentElement.js","webpack://__LIB/./node_modules/component-element/src/decorators/prop.js","webpack://__LIB/./node_modules/component-element/src/decorators/bind.js","webpack://__LIB/./node_modules/common-micro-libs/src/domutils/domMatches.js","webpack://__LIB/./src/vars-default.js","webpack://__LIB/./src/CssVars.js","webpack://__LIB/./src/import.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Set","global","__webpack_exports__","GLOBAL","window","self","Function","WeakMap","g","this","eval","e","OBJECT_TYPE","_toString","toString","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","functionBindCall","functionBind","objectDefineProperty","objectKeys","defineProperties","keys","arr","isArray","Array","consoleLog","forEach","indexOf","splice","console","log","consoleWarn","error","warn","HTMLElementPrototype","iterator","HTMLElement","doc","document","head","createElement","tagName","createTextNode","data","appendChild","insertBefore","hasAttribute","setAttribute","removeAttribute","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","push","processPending","setTimeout","isQueued","queuedCallbacks","flushQueue","callbacks","clear","queue","callback","add","OBSERVABLE_IDENTIFIER","DEFAULT_PROP_DEFINITION","configurable","TRACKERS","WATCHER_IDENTIFIER","ARRAY_WATCHABLE_PROTO","HAS_ARRAY_WATCHABLE_PROTO","ARRAY_MUTATING_METHODS","isPureObject","obj","NOTIFY_QUEUE","isNotifyQueued","objectWatchProp","prop","setupObjState","props","setupPropState","setupPropInterceptors","setupInterceptors","storeCallback","makeObservable","unWatch","propSetup","dependents","delete","unsetCallbackAsWatcherOf","watchers","destroy","writable","deep","setupCallbackStore","store","async","notify","val","undefined","parent","propOldDescriptor","getOwnPropertyDescriptor","size","set","newVal","priorVal","walk","force","arrCurrentProto","__proto__","arrProtoInterceptor","method","args","makeArrayWatchable","walkArray","walkObject","pushCallbacksToQueue","execCallback","cb","queueCallbackAndScheduleRun","x","asDependent","setCallbackAsWatcherOf","watchersSet","watching","watcherList","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domFind","domEle","selector","slice","querySelectorAll","dataStore","stash","PRIVATE","STATE_SYMBOL","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","instance","has","state","ready","readyWatcher","destroyCallbacks","destroyQueued","isMounted","hasTemplate","propDefintions","getPropsDefinition","constructor","required","filter","propName","_isAlias","setReadyState","every","ComponentClass","getComponentClassState","propsDef","propAliasDef","propNameAlias","template","observedAttrs","getComponentTemplate","Component","classState","innerHTML","supportsShadyCSS","ShadyCSS","SHADOW_DOM_SUPPORTED","createShadowRoot","attachShadow","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","ComponentElement","super","setupComponent","Error","[object Object]","prepareTemplate","prepareComponentTemplate","define","delayDestroy","useShadow","shadowMode","eleInstance","componentInstance","ownerDocument","importNode","content","getComponentInstanceTemplate","eventInitOptions","observedAttributes","propList","attr","attributeChangedCallback","oldValue","newValue","clearTimeout","parentNode","removeChild","onDestroy","_$props","propDefinitions","propValue","default","boolean","attrVal","getAttribute","geAttributeValueForProp","$ui","_$ui","$","querySelector","$$","init","unready","mounted","unmounted","emit","eventName","eventInit","eventNameLowercase","toLowerCase","CustomEvent","detail","dispatchEvent","on","eventNames","onPropsChange","connectedCallback","styleElement","styleComponentInstanceElement","disconnectedCallback","component","lastReadyState","handleReadyChanges","renderTemplate","shadowRoot","RE_UPPER_CASE_LETTERS","NOOP","setupProp","options","Proto","descriptor","setter","classProps","getClassProps","str","replace","match","p1","getKebabCase","getPropDef","lazyProp","propAliasName","aliasPropGetterSetterSetup","$propName","isUpdateMode","arguments","getOwnPropertyNames","writeToPropName","propFn","domMatches","el","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","varsDefault","freeze","--theme-color-0","--theme-color-1","--theme-color-2","--theme-color-3","--theme-color-4","--theme-color-5","--theme-color-6","--theme-color-7","--theme-color-8","--theme-color-9","--theme-color-accent-info-0","--theme-color-accent-info-1","--theme-color-accent-info-2","--theme-color-accent-info-3","--theme-color-accent-info-4","--theme-color-accent-success-0","--theme-color-accent-success-1","--theme-color-accent-success-2","--theme-color-accent-success-3","--theme-color-accent-success-4","--theme-color-accent-alert-0","--theme-color-accent-alert-1","--theme-color-accent-alert-2","--theme-color-accent-alert-3","--theme-color-accent-alert-4","--theme-color-accent-warning-0","--theme-color-accent-warning-1","--theme-color-accent-warning-2","--theme-color-accent-warning-3","--theme-color-accent-warning-4","--theme-color-accent-error-0","--theme-color-accent-error-1","--theme-color-accent-error-2","--theme-color-accent-error-3","--theme-color-accent-error-4","--theme-color-bg","--theme-color-fg","--theme-color-link","--theme-color-msg-success-bg","--theme-color-msg-success-fg","--theme-color-msg-alert-bg","--theme-color-msg-alert-fg","--theme-color-msg-warning-bg","--theme-color-msg-warning-fg","--theme-color-msg-info-bg","--theme-color-msg-info-fg","--theme-color-msg-error-bg","--theme-color-msg-error-fg","--theme-font-size-xxl","--theme-font-size-xl","--theme-font-size-l","--theme-font-size-m","--theme-font-size-s","--theme-font-size-xs","--theme-font-family","--theme-font-family-monospace","--theme-border-style","--theme-border-width","--theme-border-color","--theme-border-radius","--theme-border","--theme-spacing-0","--theme-spacing-1","--theme-spacing-2","--theme-spacing-3","--theme-spacing-4","--theme-spacing-5","--theme-spacing-6","--theme-spacing-7","--theme-spacing-8","--theme-box-shadow","--theme-box-shadow-n","--theme-box-shadow-e","--theme-box-shadow-s","--theme-box-shadow-w","CSS_VAR_LIST","VARS_DEFAULT_STYLESHEET","reduce","allVars","varName","toCssPropertiesString","varsObject","entries","isRootHtmlElement","CssVars","_dec","_applyDecoratedDescriptor","_class","defaultVars","varNames","vars","newVars","target","priorTarget","$targets","$style","_handleCustomVarsChange","_handleTargetChange","_varStyleEle","clearCustomVarsFromTargetElements","stopPushingStylesToTargets","clearCustomVars","setCustomVars","setCustomVarsOnTargetElements","handleEvent","ev","type","theme","getVarNames","varsKeys","style","setProperty","bubble","cssPropName","removeProperty","cssVarsInst","targetEle","stylesheetContent","hasChildNodes","firstChild","createStyleElement"],"mappings":"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","file":"css-vars-element.import.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = (Set.Set = Set);","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","module.exports = (WeakMap.WeakMap = WeakMap);","module.exports = (Symbol.Symbol = Symbol);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n                    \r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const isObject                 = obj => Object.prototype.toString.call(obj) === \"[object Object]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable,\r\n        writable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.writable = false;\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","let reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e));\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","import {objectDefineProperty, objectKeys, isArray} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\nimport Set from \"common-micro-libs/src/jsutils/Set\"\r\nimport nextTick from \"common-micro-libs/src/jsutils/nextTick\"\r\n\r\n//---------------------------------------------------------------------------\r\nexport const OBSERVABLE_IDENTIFIER = \"___$observable$___\"; // FIXME: this should be a Symbol()\r\n\r\nconst DEFAULT_PROP_DEFINITION = { configurable: true, enumerable: true };\r\nconst TRACKERS = new Set();\r\nconst WATCHER_IDENTIFIER = \"___$watching$___\";\r\nconst ARRAY_WATCHABLE_PROTO = \"__$watchable$__\";\r\nconst HAS_ARRAY_WATCHABLE_PROTO = `__$is${ARRAY_WATCHABLE_PROTO}`;\r\nconst ARRAY_MUTATING_METHODS = [\r\n    \"pop\",\r\n    \"push\",\r\n    \"shift\",\r\n    \"splice\",\r\n    \"unshift\",\r\n    \"sort\",\r\n    \"reverse\"\r\n];\r\nconst isPureObject = obj => obj && Object.prototype.toString.call(obj) === \"[object Object]\";\r\nconst NOTIFY_QUEUE = new Set();\r\nlet isNotifyQueued = false;\r\n\r\n/**\r\n * A lightweight utility to Watch an object's properties and get notified when it changes.\r\n *\r\n * @param {Object} obj\r\n *\r\n * @param {String} [prop]\r\n *  the property to be watched. If left undefined, then all existing properties are watched.\r\n *\r\n * @param {Function} [callback]\r\n *  The callback to be executed when property or object changes. If left undefined, then\r\n *  `obj` is only made observable (internal structure created and all current enumerable'\r\n *  properties are made \"watchable\")\r\n *\r\n *  __NOTE:__\r\n *  The callback will include a new non-enumerable property named `stopWatchingAll` of\r\n *  type `Function` that can be used to remove the given callback from all places where\r\n *  it is being used to watch a property. example:\r\n *\r\n *      const obj1 = { first: \"john\" };\r\n *      const obj2 = { last: \"smith\" };\r\n *      const watcher = () => console.log(\"changed\");\r\n *\r\n *      objectWatchProp(obj, \"first\", watcher);\r\n *      objectWatchProp(obj1, \"last\", watcher);\r\n *\r\n *      watcher.stopWatchingAll(); // removes callback from all objects that it is watching\r\n *\r\n *\r\n * @return {ObjectUnwatchProp}\r\n * Return a function to unwatch the property. Function also has a static property named\r\n * `destroy` that will do the same thing (ex. `unwatch.destroy()` is same as `unwatch()`)\r\n *\r\n * @example\r\n *\r\n * const oo = {};\r\n * const notifyNameChanged =() => console.log(`name changed: ${oo.name}`);\r\n * const unWatchName = objectWatchProp(oo, \"name\", notifyNameChanged);\r\n *\r\n * oo.name = \"paul\"; // console outputs: name changed: paul\r\n * unWatchName(); // stop watching\r\n * notifyNameChanged.stopWatchingAll(); // callback's `stopWatchingAll()` can also be called.\r\n *\r\n * @example\r\n *\r\n * const oo = {\r\n *      name: \"paul\",\r\n *      country: \"usa\"\r\n * };\r\n *\r\n * // watch all changes to object\r\n * objectWatchProp(oo, null, () => console.log(\"Something changed in object\"));\r\n *\r\n * // OR: make all properties of object observable\r\n * objectWatchProp(oo);\r\n *\r\n */\r\nexport function objectWatchProp(obj, prop, callback) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(obj);\r\n    }\r\n\r\n    // Convert prop to observable?\r\n    if (prop && !obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        setupPropState(obj, prop);\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n    // Else: do we need to setup the interceptors (again)?\r\n    // (Used by Computed props when they are created against a prop has\r\n    // been setup as an observable)\r\n    else if (prop && obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors) {\r\n        setupPropInterceptors(obj, prop);\r\n    }\r\n\r\n    if (prop && callback) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback(callback);\r\n    }\r\n    else if (!prop) {\r\n        makeObservable(obj, false);\r\n\r\n        if (callback) {\r\n            obj[OBSERVABLE_IDENTIFIER].storeCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unwatch an object property or object.\r\n     *\r\n     * @typedef {Function} ObjectUnwatchProp\r\n     * @property {Function} destroy Same as function returned.\r\n     */\r\n    const unWatch = destroyWatcher.bind(\r\n        obj,\r\n        callback,\r\n        (prop ? obj[OBSERVABLE_IDENTIFIER].props[prop] : obj[OBSERVABLE_IDENTIFIER])\r\n    );\r\n\r\n    unWatch.destroy = unWatch;\r\n    return unWatch;\r\n}\r\n\r\nexport function setupObjState(obj) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        objectDefineProperty(obj, OBSERVABLE_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            deep: false,\r\n            value: {\r\n                props: {},\r\n                dependents: new Set(),\r\n                watchers: new Set(),\r\n                storeCallback: storeCallback\r\n            }\r\n        });\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].watchers, true);\r\n    }\r\n}\r\n\r\nfunction setupCallbackStore (store, async = false) {\r\n    store.async = async;\r\n    store.isQueued = false;\r\n    store.notify = notify;\r\n}\r\n\r\nfunction setupPropState(obj, prop) {\r\n    if (!obj[OBSERVABLE_IDENTIFIER].props[prop]) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop] = {\r\n            val: undefined,\r\n            dependents: new Set(),\r\n            watchers: new Set(),\r\n            parent: obj[OBSERVABLE_IDENTIFIER],\r\n            storeCallback: storeCallback,\r\n            setupInterceptors: true,\r\n            deep: obj[OBSERVABLE_IDENTIFIER].deep\r\n        };\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].dependents, false);\r\n        setupCallbackStore(obj[OBSERVABLE_IDENTIFIER].props[prop].watchers, true);\r\n    }\r\n    return obj[OBSERVABLE_IDENTIFIER].props[prop];\r\n}\r\n\r\nfunction setupPropInterceptors(obj, prop) {\r\n    const propOldDescriptor =\r\n        Object.getOwnPropertyDescriptor(obj, prop) || DEFAULT_PROP_DEFINITION;\r\n\r\n    if (!propOldDescriptor.get) {\r\n        obj[OBSERVABLE_IDENTIFIER].props[prop].val = obj[prop];\r\n\r\n        // If prop is marked as `deep` then walk the value and convert it to observables\r\n        if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n            makeObservable(obj[OBSERVABLE_IDENTIFIER].props[prop].val);\r\n        }\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, {\r\n        configurable: propOldDescriptor.configurable || false,\r\n        enumerable: propOldDescriptor.enumerable || false,\r\n        get() {\r\n            if (TRACKERS.size) {\r\n                TRACKERS.forEach(\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop].storeCallback,\r\n                    obj[OBSERVABLE_IDENTIFIER].props[prop]\r\n                );\r\n            }\r\n\r\n            if (propOldDescriptor.get) {\r\n                return propOldDescriptor.get.call(obj);\r\n            }\r\n\r\n            return obj[OBSERVABLE_IDENTIFIER].props[prop].val;\r\n        },\r\n        set(newVal) {\r\n            const priorVal = obj[prop];\r\n            if (propOldDescriptor.set) {\r\n                newVal = propOldDescriptor.set.call(obj, newVal);\r\n            } else {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].val = newVal;\r\n            }\r\n\r\n            // If this `deep` is true and the new value is an object,\r\n            // then ensure its observable\r\n            if (obj[OBSERVABLE_IDENTIFIER].props[prop].deep) {\r\n                makeObservable(newVal);\r\n            }\r\n\r\n            if (newVal !== priorVal) {\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].watchers.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].props[prop].dependents.notify();\r\n                obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n            }\r\n\r\n            return newVal;\r\n        }\r\n    });\r\n\r\n    obj[OBSERVABLE_IDENTIFIER].props[prop].setupInterceptors = false;\r\n\r\n    // Notify object watchers that a new prop was added\r\n    if (propOldDescriptor === DEFAULT_PROP_DEFINITION) {\r\n        obj[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n    }\r\n}\r\n\r\n/**\r\n * Makes an object (deep) observable.\r\n *\r\n * @param {Object|Array} obj\r\n * @param {Boolean} [walk=true]\r\n *  If `true` (default), the object's property values are walked and\r\n *  also make observable.\r\n * @param {Boolean} [force=false]\r\n *  if true, then even if object looks like it might have already been\r\n *  converted to an observable, it will still be walked\r\n *  (if `walk` is `true`)\r\n *\r\n * @return {Object|Array} Original `obj` is returned\r\n */\r\nexport function makeObservable(obj, walk = true, force = false) {\r\n    if (!isPureObject(obj) && !isArray(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    if (!obj[OBSERVABLE_IDENTIFIER]) {\r\n        // OBJECT\r\n        if (isPureObject(obj)) {\r\n            setupObjState(obj, force);\r\n        }\r\n        // ARRAY\r\n        else if (isArray(obj)) {\r\n            makeArrayWatchable(obj, force);\r\n        }\r\n    }\r\n\r\n    // If object is marked as \"deep\" and we are not forcing the walk,\r\n    // then no need to do anything. Otherwise, mark this object as\r\n    // being `deep` and keep going\r\n    if (!force && obj[OBSERVABLE_IDENTIFIER].deep) {\r\n        return;\r\n    }\r\n    else if (walk) {\r\n        obj[OBSERVABLE_IDENTIFIER].deep = true;\r\n    }\r\n\r\n    if (isArray(obj)) {\r\n        walkArray(obj);\r\n    }\r\n    else {\r\n        walkObject(obj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n\r\nfunction walkArray(arr, force) {\r\n    for (let i=0, t=arr.length; i<t; i++) {\r\n        makeObservable(arr[i], true, force);\r\n    }\r\n}\r\n\r\nfunction walkObject(obj, force) {\r\n    // make ALL props observable\r\n    const keys = objectKeys(obj);\r\n\r\n    for (let i=0, t=keys.length; i<t; i++) {\r\n        if (!obj[OBSERVABLE_IDENTIFIER].props[keys[i]]) {\r\n            setupPropState(obj, keys[i]);\r\n            setupPropInterceptors(obj, keys[i]);\r\n        }\r\n\r\n        // Do we need to walk this property's value?\r\n        if (\r\n            !obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep ||\r\n            force\r\n        ) {\r\n            obj[OBSERVABLE_IDENTIFIER].props[keys[i]].deep = true;\r\n\r\n            if (isPureObject(obj[keys[i]])) {\r\n                makeObservable(obj[keys[i]], true, force);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction notify() {\r\n    // this: new Set(). Set instance could have two additional attributes: async ++ isQueued\r\n\r\n    if (!this.size) {\r\n        return;\r\n    }\r\n\r\n    // If the watcher Set() is synchronous, then execute the callbacks now\r\n    if (!this.async) {\r\n        this.forEach(execCallback);\r\n\r\n    } else {\r\n        this.forEach(pushCallbacksToQueue);\r\n    }\r\n\r\n    queueCallbackAndScheduleRun();\r\n}\r\n\r\nexport function queueCallbackAndScheduleRun(cb) {\r\n    if (cb) {\r\n        pushCallbacksToQueue(cb);\r\n    }\r\n\r\n    if (isNotifyQueued || !NOTIFY_QUEUE.size) {\r\n        return;\r\n    }\r\n\r\n    isNotifyQueued = true;\r\n    nextTick(flushQueue);\r\n}\r\n\r\nfunction pushCallbacksToQueue(callback) {\r\n    NOTIFY_QUEUE.add(callback);\r\n}\r\n\r\nfunction execCallback(cb) {\r\n    cb();\r\n}\r\n\r\nfunction flushQueue() {\r\n    const queuedCallbacks = [...NOTIFY_QUEUE];\r\n    NOTIFY_QUEUE.clear();\r\n    isNotifyQueued = false;\r\n    for (let x=0, total=queuedCallbacks.length; x<total; x++) {\r\n        queuedCallbacks[x]();\r\n    }\r\n    queuedCallbacks.length = 0;\r\n}\r\n\r\nfunction storeCallback(callback) {\r\n    // this === PropState\r\n    if (callback.asDependent && this.dependents) {\r\n        setCallbackAsWatcherOf(callback, this.dependents);\r\n        this.dependents.add(callback);\r\n    } else {\r\n        setCallbackAsWatcherOf(callback, this.watchers);\r\n        this.watchers.add(callback);\r\n    }\r\n}\r\n\r\nexport function destroyWatcher(callback, propSetup) {\r\n    // this == obj\r\n    if (callback) {\r\n        // Object state does not have dependents\r\n        if (propSetup.dependents) {\r\n            propSetup.dependents.delete(callback);\r\n            unsetCallbackAsWatcherOf(callback, propSetup.dependents);\r\n        }\r\n        propSetup.watchers.delete(callback);\r\n        unsetCallbackAsWatcherOf(callback, propSetup.watchers);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets a callback to be added to the list of watchers for any property\r\n * that is accessed after this function is called.\r\n *\r\n * @param {Function} callback\r\n *  The callback to be added to dependency list of watchers.\r\n *  NOTE: the callback will modified to include a new property\r\n *  `stopWatchingAll()` which can be used to remove the given callback\r\n *  from ALL dependencies that include it.\r\n *\r\n */\r\nexport function setDependencyTracker(callback) {\r\n    TRACKERS.add(callback);\r\n}\r\n\r\n/**\r\n * Removes a callback from being added to a property's watchers as they\r\n * are accessed.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function unsetDependencyTracker(callback) {\r\n    TRACKERS.delete(callback);\r\n}\r\n\r\n/**\r\n * Removes the given callback from all property watchers lists that it may\r\n * be included in.\r\n *\r\n * @param {Function} callback\r\n */\r\nexport function stopTrackerNotification(callback) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].stopWatchingAll();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Store a reference to the Set instance provided on input, on the callback.\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction setCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (!callback[WATCHER_IDENTIFIER]) {\r\n        objectDefineProperty(callback, WATCHER_IDENTIFIER, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                watching: new Set()\r\n            }\r\n        });\r\n        objectDefineProperty(callback, \"stopWatchingAll\", {\r\n            configurable: true,\r\n            writable: true,\r\n            value() {\r\n                callback[WATCHER_IDENTIFIER].watching.forEach(watcherList =>\r\n                    watcherList.delete(callback)\r\n                );\r\n                callback[WATCHER_IDENTIFIER].watching.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n    callback[WATCHER_IDENTIFIER].watching.add(watchersSet);\r\n}\r\n\r\n/**\r\n * Removes the reference to the given Set instance from the callback function provided\r\n * @private\r\n * @param {Function} callback\r\n * @param {Set} watchersSet\r\n */\r\nfunction unsetCallbackAsWatcherOf(callback, watchersSet) {\r\n    if (callback[WATCHER_IDENTIFIER]) {\r\n        callback[WATCHER_IDENTIFIER].watching.delete(watchersSet);\r\n    }\r\n}\r\n\r\n\r\nexport function makeArrayWatchable(arr) {\r\n    if (!arr[OBSERVABLE_IDENTIFIER]) {\r\n        setupObjState(arr);\r\n    }\r\n\r\n    // If array already has a watchable prototype, then exit\r\n    if (arr[HAS_ARRAY_WATCHABLE_PROTO]) {\r\n        return;\r\n    }\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n\r\n    // Create prototype interceptors?\r\n    if (!arrCurrentProto[ARRAY_WATCHABLE_PROTO]) {\r\n        const arrProtoInterceptor = Object.create(arrCurrentProto);\r\n        ARRAY_MUTATING_METHODS.forEach(method => {\r\n            objectDefineProperty(arrProtoInterceptor, method, {\r\n                configurable: true,\r\n                writable: true,\r\n                value: function arrayMethodInterceptor(...args) {\r\n                    const response = arrCurrentProto[method].call(this, ...args);\r\n                    this[OBSERVABLE_IDENTIFIER].dependents.notify();\r\n                    this[OBSERVABLE_IDENTIFIER].watchers.notify();\r\n                    return response;\r\n                }\r\n            });\r\n        });\r\n\r\n        // VALUE ADD: include a `size` read only attribute\r\n        objectDefineProperty(arrProtoInterceptor, \"size\", {\r\n            configurable: true,\r\n            get() {\r\n                if (TRACKERS.size) {\r\n                    TRACKERS.forEach(\r\n                        this[OBSERVABLE_IDENTIFIER].storeCallback,\r\n                        this[OBSERVABLE_IDENTIFIER]\r\n                    );\r\n                }\r\n                return this.length;\r\n            }\r\n        });\r\n\r\n        // Add flag to new array interceptor prototype indicating its watchable\r\n        objectDefineProperty(arrProtoInterceptor, HAS_ARRAY_WATCHABLE_PROTO, {\r\n            value: true\r\n        });\r\n\r\n        // Store the new interceptor prototype on the real prototype\r\n        objectDefineProperty(arrCurrentProto, ARRAY_WATCHABLE_PROTO, {\r\n            configurable: true,\r\n            writable: true,\r\n            value: arrProtoInterceptor\r\n        });\r\n    }\r\n\r\n    arr.__proto__ = arrCurrentProto[ARRAY_WATCHABLE_PROTO]; // eslint-disable-line\r\n}\r\n\r\n\r\nexport default objectWatchProp;\r\n","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport dataStore from \"common-micro-libs/src/jsutils/dataStore\"\r\nimport objectWatchProp from \"observables/src/objectWatchProp\"\r\nimport { isArray, objectKeys } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"common-micro-libs/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\n\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            ready: false,           // We have all required params\r\n            readyWatcher: null,\r\n            props: instance.props,\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false,\r\n            hasTemplate: false // template has been inserted into component.$ui\r\n        };\r\n\r\n        // Create all props\r\n        const propDefintions    = getPropsDefinition(instance.constructor);\r\n        const required          = objectKeys(propDefintions).filter(propName => !propDefintions[propName]._isAlias && propDefintions[propName].required);\r\n        const setReadyState     = () => {\r\n            if (!required.length || required.every(propName => !!state.props[propName])) {\r\n                state.ready = true;\r\n            }\r\n            else {\r\n                state.ready = false;\r\n            }\r\n        };\r\n\r\n        required.forEach(propName => objectWatchProp(state.props, propName, setReadyState));\r\n        setReadyState();\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        state.propsDef = {};\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (ComponentClass.propsDef) {\r\n            objectKeys(ComponentClass.propsDef).forEach(propName => {\r\n                state.propsDef[propName] = ComponentClass.propsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(state.propsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, ComponentClass.propsDef[propName], { _isAlias: true });\r\n                    state.propsDef[propName].aliases.forEach(\r\n                        propNameAlias => !state.propsDef[propNameAlias] &&\r\n                                        (state.propsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            template: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n/**\r\n * Returns a clone of the Class's template - ready to be used/inserted\r\n * into a instance of the class\r\n *\r\n * @param {ComponentElement} componentInstance\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport function getComponentInstanceTemplate(componentInstance) {\r\n    return componentInstance.ownerDocument.importNode(\r\n        getComponentTemplate(componentInstance.constructor).content,\r\n        true\r\n    );\r\n}\r\n\r\n/**\r\n * Returns a `HTMLTemplateElement` that holds the ComponentElement's template\r\n *\r\n * @param {ComponentElement} Component\r\n *  The ComponentElement class\r\n *\r\n * @return {HTMLTemplateElement}\r\n */\r\nexport function getComponentTemplate(Component) {\r\n    if (\"string\" === typeof Component.template) {\r\n        const classState = getComponentClassState(Component);\r\n\r\n        if (!classState.template) {\r\n            classState.template = document.createElement(\"template\");\r\n            classState.template.innerHTML = Component.template;\r\n        }\r\n\r\n        return classState.template;\r\n    }\r\n\r\n    return Component.template;\r\n}\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"common-micro-libs/src/jsutils/getGlobal\"\r\nimport {getComponentTemplate} from \"./utils\"\r\n\r\n//===========================================================================================\r\nconst supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\n\r\n// FIXME: code below should check also for native support for CEs (protect against polyfills loaded in a native env?)\r\n\r\n/**\r\n * Prepares the component's styles for the given `define` tag name.\r\n * Method should be called at the time the Element is registered into CustomElementsRegistry\r\n *\r\n * @param {ComponentElement} Component\r\n * @param {String} tagName\r\n */\r\nexport function prepareComponentTemplate(Component, tagName){\r\n    // FIXME: need additional checks here. ONly use shady if ShadowDom is not supported natively.\r\n    //              need to use: ShadyCSS.nativeShadow to check if shadowroot is supported\r\n    //              Also: should we check the Component's \"useShadow\" property?\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(getComponentTemplate(Component), tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport {\r\n    objectKeys,\r\n    objectDefineProperty,\r\n    consoleWarn,\r\n    head\r\n} from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {objectWatchProp} from \"observables/src/objectWatchProp\"\r\nimport domAddEventListener from \"common-micro-libs/src/domutils/domAddEventListener\"\r\nimport domFind from \"common-micro-libs/src/domutils/domFind\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentInstanceTemplate,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils\"\r\nimport {\r\n    prepareComponentTemplate,\r\n    styleComponentInstanceElement\r\n} from \"./polyfill-support\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = head.createShadowRoot || head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\n\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nexport class ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        prepareComponentTemplate(this, name);\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                consoleWarn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 250; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() { return \"<div></div>\"; }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(eleInstance) {\r\n        // FIXME: should two additional params be provided - one to get templateInstance and another to get templateElement?\r\n        return getComponentInstanceTemplate(eleInstance);\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        if (this.constructor.prototype === this) {\r\n            throw new Error(\"can't be used on own prototype\");\r\n        }\r\n\r\n        if (this._$props) {\r\n            return this._$props;\r\n        }\r\n\r\n        // On first call - setup the property on the instance\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&   // FIXME: need to determine if Boolean attributes are working\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                objectDefineProperty(props, propName, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return propValue;\r\n                    },\r\n                    set: newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n                        return propValue = newValue;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        objectDefineProperty(this, \"_$props\", { value: props });\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        return domFind(this.$ui, selector);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Called to initialize the component, but only after only after all required\r\n     * props have been provided.  This method could be called multiple times, if component\r\n     * has been destroyed, but then re-attached to the DOM Tree.\r\n     *\r\n     */\r\n    init() {}\r\n\r\n    /**\r\n     * Component is ready to be started. This means that all required props/param have been provided.\r\n     */\r\n    ready() {}\r\n\r\n    /**\r\n     * Component is not ready, and if already stated, it might need adjusted. This means that not all\r\n     * required props are currently defined.\r\n     */\r\n    unready() {}\r\n\r\n    /**\r\n     * Called only after the component has been initialized (`init()` has been called).\r\n     * This method could be called multiple times depending on whether the element is\r\n     * added/removed from DOM.\r\n     * This is a good place to setup global events and/or initiate retrieval of data.\r\n     */\r\n    mounted() {}\r\n\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    unmounted() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        const eventNameLowercase = eventName.toLowerCase();\r\n        const event = new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        );\r\n\r\n        if (\"function\" === typeof this[eventNameLowercase]) {\r\n            this[eventNameLowercase](event);\r\n        }\r\n\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {ObjectUnwatchProp}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return objectWatchProp(this.props, propName, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ BUITINS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    connectedCallback() {\r\n        styleComponentInstanceElement(this);\r\n\r\n        // Cancel destroy if it is queued\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.isMounted = true;\r\n            if (state.ready) {\r\n                this.mounted();\r\n            }\r\n        }\r\n        else {\r\n            getState(this).isMounted = true;\r\n            setupComponent(this);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n            if (state.ready) {\r\n                this.unmounted();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ComponentElement;\r\n\r\nfunction setupComponent(component) {\r\n    const state = getState(component);\r\n    let lastReadyState = null;\r\n    const handleReadyChanges = () => {\r\n        if (lastReadyState === state.ready) {\r\n            return;\r\n        }\r\n\r\n        lastReadyState = state.ready;\r\n\r\n        if (state.ready) {\r\n            if (!state.hasTemplate) {\r\n                // component._$ui.innerHTML = component.constructor.template;\r\n                component._$ui.appendChild(\r\n                    component.constructor.renderTemplate(component)\r\n                );\r\n                state.hasTemplate = true;\r\n            }\r\n\r\n            component.ready();\r\n\r\n            if (state.isMounted) {\r\n                component.mounted();\r\n            }\r\n        }\r\n        else if (state.hasTemplate) {\r\n            component.unready();\r\n        }\r\n\r\n    };\r\n\r\n    if (component.constructor.useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: component.constructor.shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.init();\r\n\r\n    state.readyWatcher = objectWatchProp(state, \"ready\", handleReadyChanges);\r\n    component.onDestroy(state.readyWatcher);\r\n    handleReadyChanges();\r\n}\r\n","import objectExtend from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport { objectDefineProperty } from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport { getKebabCase, getPropsDefinition, elementHasAttributeForProp } from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object} [options]\r\n * @param {Object} [Proto]\r\n * @param {String} [prop]\r\n * @param {Object} [descriptor]\r\n *\r\n * @returns {Function}\r\n */\r\nexport function prop(...args) {\r\n    // Called with options? Return Design function\r\n    if (args.length < 2) {\r\n        return setupProp.bind(null, args[0]);\r\n    }\r\n    return setupProp(null, ...args);\r\n}\r\n\r\n\r\nfunction setupProp(options, Proto, prop, descriptor) {\r\n    let getter = descriptor.get;\r\n    let setter = descriptor.set;\r\n    let propDef;\r\n\r\n    // If prop is defined as `boolean` then ensure that the value stored is\r\n    // always a boolean based upon whether the prop is on the element or not\r\n    // In this case, defined getter/setter is ignored/discarded\r\n    // TODO: is there a use case where calling the real getter/setter is valid?\r\n    if (options && options.boolean) {\r\n        options.attr = true;\r\n\r\n        getter = descriptor.get = function () {\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n\r\n        setter = descriptor.set = function (value) {\r\n            // When setting the value of this attribute directly on the instance (or instance.props),\r\n            // ensure that element attribute is also adjusted to reflect value.\r\n            // Do this only if the `value` is boolean - because when an attribute is added to the\r\n            // element, its value should be empty string.\r\n            if (\"boolean\" === typeof value) {\r\n                if (value && !elementHasAttributeForProp(this, propDef)) {\r\n                    this.setAttribute(prop, \"\");\r\n                }\r\n                else if (!value && elementHasAttributeForProp(this, propDef)) {\r\n                    this.removeAttribute(prop);\r\n                }\r\n            }\r\n            return elementHasAttributeForProp(this, propDef);\r\n        };\r\n    }\r\n\r\n    propDef = objectExtend(getPropDef(Proto, prop, getter, setter), options);\r\n    descriptor.get = descriptor.set = lazyProp(prop, getter, setter);\r\n\r\n    // Create a instance property for each alias as well\r\n    if (propDef.aliases.length) {\r\n        propDef.aliases.forEach(propAliasName => {\r\n            if (!(propAliasName in Proto)) {\r\n                const aliasPropGetterSetterSetup = lazyProp(propAliasName, getter, setter);\r\n                objectDefineProperty(Proto, propAliasName, {\r\n                    configurable: true,\r\n                    get: aliasPropGetterSetterSetup,\r\n                    set: aliasPropGetterSetterSetup\r\n                });\r\n            }\r\n        })\r\n    }\r\n    return descriptor;\r\n}\r\n\r\n\r\nfunction getClassProps(Proto) {\r\n    if (!Proto.constructor.propsDef) {\r\n        objectDefineProperty(Proto.constructor, \"propsDef\", { configurable: true, writable: true, value: {} })\r\n    }\r\n    return Proto.constructor.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the PropDefinition\r\n *\r\n * @private\r\n *\r\n * @param Proto\r\n * @param name\r\n * @param getter\r\n * @param setter\r\n * @returns ComponentElement~PropDefinition\r\n */\r\nfunction getPropDef(Proto, name, getter, setter) {\r\n    const classProps = getClassProps(Proto);\r\n\r\n    if (!classProps[name]) {\r\n        /**\r\n         * A Class prop definition\r\n         *\r\n         * @typedef {Object} ComponentElement~PropDefinition\r\n         * @property {String} name              Then name of the prop\r\n         * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n         * @property {Boolean} required         Is the prop required\r\n         * @property {Boolean} boolean          Is the prop value mean to be a boolean (note: also forces `attr` to true)\r\n         * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n         * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n         * @property {Array<String>} aliases    An array of aliases for the prop\r\n         */\r\n        classProps[name] = {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: getter || NOOP,\r\n            filter: setter || NOOP,\r\n            aliases: [\r\n                name.toLowerCase()\r\n            ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        };\r\n\r\n        // If the prop name has upper case letters, then its possible that it is\r\n        // defined as camelCase - create ka-bab alias.\r\n        if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n            classProps[name].aliases.push(getKebabCase(name));\r\n        }\r\n    }\r\n\r\n    return classProps[name];\r\n}\r\n\r\n/**\r\n * Return a getter/setter function to be used in a Property descriptor. When invoked first time as\r\n * part of an instance, it will setup the actually get/set function that will persist Props to the\r\n * instance `instance.props`\r\n *\r\n * @private\r\n *\r\n * @param propName\r\n * @param getter\r\n * @param setter\r\n *\r\n * @returns {Function}\r\n */\r\nfunction lazyProp(propName/*, getter, setter*/) { // FIXME: getter/setter not being used?\r\n    const $propName = `_$${ propName }`;\r\n\r\n    return function lazyGetterSetter() {\r\n        const isUpdateMode = arguments.length === 1;\r\n\r\n        if (Object.getOwnPropertyNames(this).indexOf($propName) !== -1) {\r\n            return isUpdateMode ? (this[$propName] = arguments[0]) : this[$propName];\r\n        }\r\n\r\n        // Ensure we write back to\r\n        const writeToPropName = getPropsDefinition(this.constructor)[propName].name;\r\n\r\n        objectDefineProperty(this, $propName, {\r\n            configurable: true,\r\n            get() {\r\n                return this.props[writeToPropName];\r\n            },\r\n            set(newValue) {\r\n                return this.props[writeToPropName] = newValue;\r\n            }\r\n        });\r\n\r\n        // update mode\r\n        if (isUpdateMode) {\r\n            return this[$propName] = arguments[0];\r\n        }\r\n\r\n        return this[$propName];\r\n    };\r\n}\r\n","import {objectDefineProperty} from \"common-micro-libs/src/jsutils/runtime-aliases\";\r\n\r\n/**\r\n * Binds the given attributes to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(Proto, prop, descriptor) {\r\n    if (Proto && prop && descriptor && \"function\" === typeof descriptor.value) {\r\n        const propFn = descriptor.value;\r\n        const writable = descriptor.writable;\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            if (this[`__settingUp:${prop}`]) {\r\n                return;\r\n            }\r\n            this[`__settingUp:${prop}`] = true; // Fuck you IE!\r\n\r\n            const fn = propFn.bind(this);\r\n            objectDefineProperty(this, prop, {\r\n                configurable: descriptor.configurable,\r\n                enumerable: descriptor.enumerable,\r\n                writable: writable,\r\n                value: fn\r\n            });\r\n            delete this[`__settingUp:${prop}`];\r\n            return fn;\r\n        };\r\n        return descriptor;\r\n    }\r\n    return bind; // for when called explicitly with no params: `bind()`\r\n}\r\n","/**\r\n * Given an HTML Element and a selector, this method will return\r\n * a Boolean indicating if Element matches selector.\r\n *\r\n * @function domMatches\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} selector\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domMatches(el, selector) {\r\n    if (!el || !selector) {\r\n        return false;\r\n    }\r\n    return (\r\n        el.matches              ||\r\n        el.matchesSelector      ||\r\n        el.msMatchesSelector    ||\r\n        el.mozMatchesSelector   ||\r\n        el.webkitMatchesSelector||\r\n        el.oMatchesSelector\r\n    ).call(el, selector);\r\n}\r\nexport default domMatches;","\r\n/*\r\n    All colors are normally defined starting with the lightest one\r\n*/\r\n\r\nexport const varsDefault = Object.freeze({\r\n    //---------------------------------------------------------------\r\n    //                                                  COLORS\r\n    //---------------------------------------------------------------\r\n\r\n    /* == PRIMARY COLORS == */\r\n    \"--theme-color-0\": \"#FFFFFF\",\r\n    \"--theme-color-1\": \"#ECECEC\",\r\n    \"--theme-color-2\": \"#DCDCDC\",\r\n    \"--theme-color-3\": \"#C5C5C5\",\r\n    \"--theme-color-4\": \"#ADADAD\",\r\n    \"--theme-color-5\": \"#8A8A8A\",\r\n    \"--theme-color-6\": \"#656565\",\r\n    \"--theme-color-7\": \"#565656\",\r\n    \"--theme-color-8\": \"#2D2D2D\",\r\n    \"--theme-color-9\": \"#000000\",\r\n\r\n    /* == SECONDARY COLOR: info (usually in the blue color) == */\r\n    \"--theme-color-accent-info-0\": \"#def3ff\",\r\n    \"--theme-color-accent-info-1\": \"#bee1f4\",\r\n    \"--theme-color-accent-info-2\": \"#39a5dc\",\r\n    \"--theme-color-accent-info-3\": \"#0088ce\",\r\n    \"--theme-color-accent-info-4\": \"#00659c\",\r\n\r\n\r\n    /* == SECONDARY COLOR: success (usually in the green color) == */\r\n    \"--theme-color-accent-success-0\": \"#cfe7cd\",\r\n    \"--theme-color-accent-success-1\": \"#9ecf99\",\r\n    \"--theme-color-accent-success-2\": \"#6ec664\",\r\n    \"--theme-color-accent-success-3\": \"#3f9c35\",\r\n    \"--theme-color-accent-success-4\": \"#2d7623\",\r\n\r\n\r\n    /* == SECONDARY COLOR: alert (usually in the Yellow color) == */\r\n    /*    https://coolors.co/fcf6e3-f9e4a4-f9d463-f9c62c-dda600     */\r\n    \"--theme-color-accent-alert-0\": \"#fcf6e3\",\r\n    \"--theme-color-accent-alert-1\": \"#f9e4a4\",\r\n    \"--theme-color-accent-alert-2\": \"#f9d463\",\r\n    \"--theme-color-accent-alert-3\": \"#f9c62c\",\r\n    \"--theme-color-accent-alert-4\": \"#dda600\",\r\n\r\n    /* == SECONDARY COLOR: warning (usually in the orange color) == */\r\n    /*    https://coolors.co/ffe2af-ffc57a-ffa86b-ff8330-f4581f     */\r\n    \"--theme-color-accent-warning-0\": \"#ffe2af\",\r\n    \"--theme-color-accent-warning-1\": \"#ffc57a\",\r\n    \"--theme-color-accent-warning-2\": \"#ffa86b\",\r\n    \"--theme-color-accent-warning-3\": \"#ff8330\",\r\n    \"--theme-color-accent-warning-4\": \"#f4581f\",\r\n\r\n\r\n    /* == SECONDARY COLOR: error (usually in the error color) == */\r\n    /*    https://coolors.co/f9caca-ff7a7a-ff4b4b-ff171a-bd1818  */\r\n    \"--theme-color-accent-error-0\": \"#F9CACA\",\r\n    \"--theme-color-accent-error-1\": \"#FF7A7A\",\r\n    \"--theme-color-accent-error-2\": \"#FF4B4B\",\r\n    \"--theme-color-accent-error-3\": \"#FF171A\",\r\n    \"--theme-color-accent-error-4\": \"#BD1818\",\r\n\r\n\r\n    /* == BACKGROUND / FORGROUND == */\r\n    \"--theme-color-bg\": \"var(--theme-color-0)\",\r\n    \"--theme-color-fg\": \"var(--theme-color-9)\",\r\n\r\n    /* == LINKS == */\r\n    \"--theme-color-link\": \"var(--theme-color-accent-info-3)\",\r\n\r\n    /* == MESSAGES == */\r\n    \"--theme-color-msg-success-bg\": \"var(--theme-color-accent-success-0)\",\r\n    \"--theme-color-msg-success-fg\": \"var(--theme-color-accent-success-4)\",\r\n\r\n    \"--theme-color-msg-alert-bg\": \"var(--theme-color-accent-alert-0)\",\r\n    \"--theme-color-msg-alert-fg\": \"var(--theme-color-accent-alert-4)\",\r\n\r\n    \"--theme-color-msg-warning-bg\": \"var(--theme-color-accent-warning-0)\",\r\n    \"--theme-color-msg-warning-fg\": \"var(--theme-color-accent-warning-4)\",\r\n\r\n    \"--theme-color-msg-info-bg\": \"var(--theme-color-accent-info-0)\",\r\n    \"--theme-color-msg-info-fg\": \"var(--theme-color-accent-info-4)\",\r\n\r\n    \"--theme-color-msg-error-bg\": \"var(--theme-color-accent-error-0)\",\r\n    \"--theme-color-msg-error-fg\": \"var(--theme-color-accent-error-4)\",\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                                  FONTS\r\n    //---------------------------------------------------------------\r\n    \"--theme-font-size-xxl\": \"28px\",\r\n    \"--theme-font-size-xl\": \"21px\",\r\n    \"--theme-font-size-l\": \"17px\",\r\n    \"--theme-font-size-m\": \"14px\",\r\n    \"--theme-font-size-s\": \"12px\",\r\n    \"--theme-font-size-xs\": \"11px\",\r\n\r\n    \"--theme-font-family\": \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n    \"--theme-font-family-monospace\": \"SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace\",\r\n\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                                  BORDERS\r\n    //---------------------------------------------------------------\r\n    \"--theme-border-style\": \"solid\",\r\n    \"--theme-border-width\": \"1px\",\r\n    \"--theme-border-color\": \"var(--theme-color-5)\",\r\n    \"--theme-border-radius\": \"3px\",\r\n\r\n    \"--theme-border\": \"var(--theme-border-width) var(--theme-border-style) var(--theme-border-color)\",\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                     SPACING AND PADDING\r\n    //---------------------------------------------------------------\r\n    \"--theme-spacing-0\": \"0\",\r\n    \"--theme-spacing-1\": \"0.25rem\",\r\n    \"--theme-spacing-2\": \"0.5rem\",\r\n    \"--theme-spacing-3\": \"0.75rem\",\r\n    \"--theme-spacing-4\": \"1rem\",\r\n    \"--theme-spacing-5\": \"1.25rem\",\r\n    \"--theme-spacing-6\": \"1.5rem\",\r\n    \"--theme-spacing-7\": \"1.75rem\",\r\n    \"--theme-spacing-8\": \"2rem\",\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                              AFFECTS\r\n    //---------------------------------------------------------------\r\n    \"--theme-box-shadow\": \"0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow-n\": \"0 -8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow-e\": \"8px 0 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow-s\": \"var(--theme-box-shadow)\",\r\n    \"--theme-box-shadow-w\": \"-8px 0 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\"\r\n});\r\n","import {ComponentElement, prop, bind, STATE_SYMBOL} from \"component-element\"\r\nimport {domFind} from \"common-micro-libs/src/domutils/domFind\"\r\nimport {domMatches} from \"common-micro-libs/src/domutils/domMatches\"\r\nimport {\r\n    objectKeys,\r\n    doc,\r\n    createTextNode,\r\n    createElement,\r\n    appendChild\r\n} from \"common-micro-libs/src/jsutils/runtime-aliases\"\r\nimport {varsDefault} from \"./vars-default\";\r\n\r\n//=========================================================================\r\nexport const VERSION = BUILD.DATA.VERSION; // eslint-disable-line\r\nconst CSS_VAR_LIST = objectKeys(varsDefault);\r\nconst VARS_DEFAULT_STYLESHEET = CSS_VAR_LIST.reduce((allVars, varName) => {\r\n    allVars += `${varName}: ${varsDefault[varName]};` + \"\\n\";\r\n    return allVars;\r\n}, \"\");\r\nconst toCssPropertiesString = varsObject => {\r\n    return Object\r\n        .entries(varsObject)\r\n        .reduce((str, [property, value]) => (str += `${property}: ${value};`), \"\");\r\n};\r\nconst isRootHtmlElement = ele => domMatches(ele, \":root\");\r\n\r\n/**\r\n * An element that exposes several CSS variables that can be controlled and thus affect\r\n * the inner elements. Use it for styling common widgets\r\n *\r\n * @listens CssVars#set-vars\r\n * @fires CssVars#change\r\n */\r\nexport class CssVars extends ComponentElement {\r\n    static get tagName() {\r\n        return \"css-vars\";\r\n    }\r\n\r\n    /**\r\n     * Returns an object with the default variables and associated values\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    static get defaultVars() {\r\n        return varsDefault;\r\n    }\r\n\r\n    /**\r\n     * Returns an array with all the css var names\r\n     *\r\n     * @type {Array}\r\n     */\r\n    static get varNames() {\r\n        return CSS_VAR_LIST.slice(0);\r\n    }\r\n\r\n    static get template() {\r\n        return `\r\n<style>\r\n:host {\r\n    display: block;\r\n}\r\n</style>\r\n<style vars>\r\n:host {\r\n    ${VARS_DEFAULT_STYLESHEET}\r\n}\r\n</style>\r\n<slot></slot>`;\r\n    }\r\n\r\n    /**\r\n     * The set of props that should be set to the Element. Use this to set custom set of\r\n     * var, thus enabling the creation of different themes.\r\n     *\r\n     * @property\r\n     * @type {Object}\r\n     */\r\n    @prop\r\n    get vars() {\r\n        return varsDefault;\r\n    }\r\n\r\n    set vars(newVars) {\r\n        if (\"object\" !== typeof newVars) {\r\n            console.warn(\"vars prop must be an object!\"); // eslint-disable-line\r\n            newVars = {};\r\n        }\r\n        return newVars;\r\n    }\r\n\r\n\r\n    /**\r\n     * A DOM selector to where the css vars will also be set. This will be in addition to\r\n     * setting the vars on this element itself.\r\n     * If defined as a string, then its assume to be a css selector.  Value can also be\r\n     * set as a DOM element or Style element. When a Style Element is used, the entire\r\n     * Style element's content will be manipulated, so it should be one that does not\r\n     * already contain defintions.\r\n     *\r\n     * @property\r\n     * @type {String|HTMLElement|HTMLStyleElement}\r\n     * @example\r\n     *\r\n     * <css-vars target\":root\"></css-vars>\r\n     */\r\n    @prop({attr: true})\r\n    get target() {\r\n        return null;\r\n    }\r\n\r\n\r\n    init() {\r\n        this[STATE_SYMBOL] = {\r\n            priorTarget: null,\r\n            /** @type Array<HTMLElement> */\r\n            $targets: null,\r\n            $style: null\r\n        };\r\n\r\n        this.on(\"themeChange\", this);\r\n\r\n        // When `vars` change - set vars that were provided\r\n        this.onPropsChange(this._handleCustomVarsChange, \"vars\");\r\n\r\n        // When `target` changes, clean out existing <style> tag for defaults and apply new one\r\n        this.onPropsChange(this._handleTargetChange, \"target\");\r\n    }\r\n\r\n    ready() {\r\n        this._varStyleEle = this.$(\"style[vars]\");\r\n        this._handleCustomVarsChange();\r\n        this._handleTargetChange();\r\n    }\r\n\r\n    unmounted() {\r\n        clearCustomVarsFromTargetElements(this);\r\n        stopPushingStylesToTargets(this);\r\n    }\r\n\r\n    @bind\r\n    _handleCustomVarsChange() {\r\n        clearCustomVars(this, this.vars, false);\r\n        setCustomVars(this, this.props.vars);\r\n\r\n        clearCustomVarsFromTargetElements(this);\r\n        setCustomVarsOnTargetElements(this);\r\n    }\r\n\r\n    @bind\r\n    _handleTargetChange() {\r\n        // Tear down and create new (if applicable) default styles for selector\r\n        if (this[STATE_SYMBOL].priorTarget && this[STATE_SYMBOL].priorTarget !== this.props.target) {\r\n            clearCustomVarsFromTargetElements(this);\r\n            stopPushingStylesToTargets(this);\r\n        }\r\n\r\n        if (this.props.target) {\r\n            setCustomVarsOnTargetElements(this);\r\n        }\r\n    }\r\n\r\n    handleEvent(ev) {\r\n        if (ev.type === \"themeChange\" && ev.detail) {\r\n            this.clear();\r\n            this.props.vars = ev.detail && ev.detail.theme ? ev.detail.theme : ev.detail;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clears the current set of css vars from the element that\r\n     * were applied outside of the default\r\n     * (essentially: clears out props.vars object)\r\n     */\r\n    clear() {\r\n        if (this.props.vars) {\r\n            clearCustomVars(this, this.props.vars);\r\n        }\r\n        this.props.vars = {};\r\n    }\r\n\r\n    /**\r\n     * List of all CSS variables set/used by this Element\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    getVarNames() {\r\n        return this.constructor.varNames;\r\n    }\r\n}\r\n\r\nfunction setCustomVars(ele, vars, emit = true) {\r\n    const varsKeys = objectKeys(vars);\r\n\r\n    if (varsKeys.length) {\r\n        // Is it a CssVars element? if so, then set on internal <style> elememt\r\n        if (ele._varStyleEle) {\r\n            ele._varStyleEle.innerHTML = \"\";\r\n            appendChild(\r\n                ele._varStyleEle,\r\n                createTextNode(`\r\n:host {\r\n${ toCssPropertiesString(vars) }\r\n}\r\n`\r\n                )\r\n            );\r\n\r\n            // Is it A STYLE tag?, then replace its content\r\n        } else if (ele.tagName === \"STYLE\") {\r\n            ele.innerHTML = \"\";\r\n            appendChild(ele, createTextNode(`\r\n:root {\r\n${ toCssPropertiesString(vars) } \r\n}\r\n`));\r\n            // ELSE: set directly on the element\r\n        } else {\r\n            varsKeys.forEach(varName => {\r\n                ele.style.setProperty(varName, vars[varName]);\r\n            });\r\n        }\r\n\r\n        if (emit && ele.emit) {\r\n            /**\r\n             * Style variables have changed\r\n             * @event CssVars#change\r\n             */\r\n            ele.emit(\"change\", null, {bubble: true});\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearCustomVars(ele, vars, emit = true) {\r\n    const varsKeys = objectKeys(vars);\r\n\r\n    if (varsKeys.length) {\r\n        varsKeys.forEach(cssPropName => {\r\n            if (ele.tagName === \"STYLE\") {\r\n                ele.innerHTML = \"\";\r\n            } else {\r\n                ele.style.removeProperty(cssPropName);\r\n            }\r\n        });\r\n\r\n        if (emit && ele.emit) {\r\n            ele.emit(\"change\", null, {bubble: true});\r\n        }\r\n    }\r\n}\r\n\r\nfunction setCustomVarsOnTargetElements(cssVarsInst) {\r\n    const state = cssVarsInst[STATE_SYMBOL];\r\n    const {target, vars} = cssVarsInst.props;\r\n\r\n    if (target) {\r\n        if (!state.$targets) {\r\n            if (\"string\" === typeof target) {\r\n                state.$targets = domFind(doc, target);\r\n            } else {\r\n                state.$targets = [target];\r\n            }\r\n        }\r\n\r\n        state.$targets.forEach(targetEle => {\r\n            // :root is treated differently\r\n            if (isRootHtmlElement(targetEle)) {\r\n                // If no defaults are yet created for this target, do it now\r\n                if (!state.$style) {\r\n                    state.$style = createStyleElement(\"\");\r\n                }\r\n                targetEle = state.$style;\r\n            }\r\n\r\n            setCustomVars(targetEle, vars, false);\r\n        });\r\n\r\n        cssVarsInst[STATE_SYMBOL].priorTarget = target;\r\n    }\r\n}\r\n\r\nfunction clearCustomVarsFromTargetElements(cssVarsInst) {\r\n    const state = cssVarsInst[STATE_SYMBOL];\r\n\r\n    if (state.$targets) {\r\n        state.$targets.forEach(targetEle => {\r\n            if (isRootHtmlElement(targetEle)) {\r\n                targetEle = state.$style;\r\n            }\r\n            clearCustomVars(targetEle, cssVarsInst.props.vars, false);\r\n        });\r\n    }\r\n}\r\n\r\nfunction stopPushingStylesToTargets(cssVarsInst) {\r\n    const state = cssVarsInst[STATE_SYMBOL];\r\n    if (state.$style) {\r\n        state.$style.parentNode.removeChild(state.$style);\r\n        state.$style = null;\r\n    }\r\n    if (state.$targets) {\r\n        state.$targets = null;\r\n    }\r\n}\r\n\r\nfunction createStyleElement(stylesheetContent) {\r\n    const style = createElement(\"style\");\r\n    const head = doc.head;\r\n\r\n    style.type = \"text/css\";\r\n    appendChild(style, createTextNode(stylesheetContent));\r\n\r\n    if (head.hasChildNodes()) {\r\n        head.insertBefore(style, head.firstChild)\r\n    } else {\r\n        appendChild(head, style);\r\n    }\r\n\r\n    return style;\r\n}\r\n\r\nexport default CssVars;\r\n","// Registers Custom Element on the global registry with default tagName\r\nimport {CssVars} from \"./CssVars\";\r\nCssVars.define();"],"sourceRoot":""}