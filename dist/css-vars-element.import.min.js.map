{"version":3,"sources":["webpack://__LIB/webpack/bootstrap","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://__LIB/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://__LIB/webpack://__LIB/webpack/bootstrap","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://__LIB/webpack:/__LIB/external \"(WeakMap.WeakMap = WeakMap)\"","webpack://__LIB/webpack://__LIB/(webpack)/buildin/global.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/throwIfThisIsPrototype.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/domutils/domFind.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://__LIB/webpack://__LIB/node_modules/@purtuga/common/src/jsutils/Ev.js","webpack://__LIB/webpack://__LIB/src/utils.js","webpack://__LIB/webpack://__LIB/src/polyfill-support.js","webpack://__LIB/webpack://__LIB/src/ComponentElement.js","webpack://__LIB/webpack://__LIB/src/decorators/prop.js","webpack://__LIB/webpack://__LIB/src/decorators/bind.js","webpack://__LIB/webpack://__LIB/src/index.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://__LIB/./node_modules/@purtuga/common/src/domutils/domMatches.js","webpack://__LIB/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://__LIB/./src/vars-default.js","webpack://__LIB/./src/CssVars.js","webpack://__LIB/./src/import.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_toArray","arr","Array","isArray","arrayWithHoles","iter","iterator","toString","from","iterableToArray","TypeError","nonIterableRest","e","default","GLOBAL","window","global","self","Function","g","this","eval","functionBindCall","isObject","obj","objectDefineProperty","objectKeys","defineProperties","keys","prop","setter","configurable","writable","descriptor","set","consoleLog","forEach","indexOf","splice","slice","console","log","consoleWarn","error","warn","HTMLElementPrototype","HTMLElement","doc","document","head","createElement","tagName","appendChild","insertBefore","hasAttribute","getAttribute","setAttribute","removeAttribute","objectExtend","mergeIntoObj","mergeObjects","response","total","length","deepMerge","shift","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","push","processPending","setTimeout","isQueued","queuedCallbacks","Set","flushQueue","callbacks","clear","throwIfThisIsPrototype","THIS","constructor","Error","queue","callback","add","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domFind","domEle","selector","querySelectorAll","dataStore","WeakMap","LISTENER_STORAGE","Ev","on","getStoreFor","delete","emit","data","inst","Map","has","PRIVATE","STATE_SYMBOL","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","instance","state","isCssScopingDone","templateEle","ev","destroyCallbacks","destroyQueued","isMounted","getPropsDefinition","ComponentClass","getComponentClassState","propsDef","statePropsDef","componentPropsDef","propName","propAliasDef","_isAlias","propNameAlias","observedAttrs","supportsShadyCSS","ShadyCSS","removeElement","parentNode","removeChild","isString","supportsNativeShadowDom","createShadowRoot","attachShadow","nativeShadow","SHADOW_DOM_SUPPORTED","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","PROPS_NOOP","freeze","EVENT_ANY","lazySetupUnderway","ComponentElement","args","super","component","useShadow","shadowMode","shadowRoot","_$ui","onPropsChange","_queueUpdate","didInit","[object Object]","define","delayDestroy","template","eventInitOptions","observedAttributes","propList","filter","attr","props","propDefinitions","notifyAnyListeners","notifyPropListeners","propValue","boolean","attrVal","newValue","undefined","hasRequiredProps","required","every","$ui","destroy","clearTimeout","cb","didDestroy","onDestroy","$","querySelector","$$","update","_update","shouldRender","willRender","_setView","render","didRender","__queueUpdate","renderOutput","view","eleInstance","isRenderOutputString","ComponentClassState","innerHTML","cloneNode","prepareTemplate","importNode","content","textContent","prepareTemplateDom","prepareRenderedContent","init","didMount","ready","mounted","didUnmount","unmounted","eventName","eventInit","eventNameLowercase","toLowerCase","CustomEvent","detail","dispatchEvent","eventNames","attributeChangedCallback","oldValue","connectedCallback","componentInstance","styleElement","disconnectedCallback","RE_UPPER_CASE_LETTERS","NOOP","val","options","kind","_propDecorator","initializer","propDefinition","validator","propertyDefinition","str","replace","match","p1","newDescriptor","getDecoratorDescriptor","extras","map","aliasName","proxyToPropName","componentPropDefinition","DecoratorDescriptor","placement","finisher","Klass","_bound","decoratorDescriptor","isDoingLazySetup","method","boundMethod","domMatches","el","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","functionBind","createTextNode","varsDefault","--theme-color-0","--theme-color-1","--theme-color-2","--theme-color-3","--theme-color-4","--theme-color-5","--theme-color-6","--theme-color-7","--theme-color-8","--theme-color-9","--theme-color-accent-info-0","--theme-color-accent-info-1","--theme-color-accent-info-2","--theme-color-accent-info-3","--theme-color-accent-info-4","--theme-color-accent-success-0","--theme-color-accent-success-1","--theme-color-accent-success-2","--theme-color-accent-success-3","--theme-color-accent-success-4","--theme-color-accent-alert-0","--theme-color-accent-alert-1","--theme-color-accent-alert-2","--theme-color-accent-alert-3","--theme-color-accent-alert-4","--theme-color-accent-warning-0","--theme-color-accent-warning-1","--theme-color-accent-warning-2","--theme-color-accent-warning-3","--theme-color-accent-warning-4","--theme-color-accent-error-0","--theme-color-accent-error-1","--theme-color-accent-error-2","--theme-color-accent-error-3","--theme-color-accent-error-4","--theme-color-bg","--theme-color-fg","--theme-color-link","--theme-color-msg-success-bg","--theme-color-msg-success-fg","--theme-color-msg-alert-bg","--theme-color-msg-alert-fg","--theme-color-msg-warning-bg","--theme-color-msg-warning-fg","--theme-color-msg-info-bg","--theme-color-msg-info-fg","--theme-color-msg-error-bg","--theme-color-msg-error-fg","--theme-font-size-xxl","--theme-font-size-xl","--theme-font-size-l","--theme-font-size-m","--theme-font-size-s","--theme-font-size-xs","--theme-font-size","--theme-font-family","--theme-font-family-monospace","--theme-border-style","--theme-border-width","--theme-border-color","--theme-border-color-light","--theme-border-radius-sm","--theme-border-radius-md","--theme-border-radius-lg","--theme-border-radius-xl","--theme-border-radius","--theme-border","--theme-border-light","--theme-spacing-0","--theme-spacing-1","--theme-spacing-2","--theme-spacing-3","--theme-spacing-4","--theme-spacing-5","--theme-spacing-6","--theme-spacing-7","--theme-spacing-8","--theme-spacing-9","--theme-spacing","--theme-box-shadow-n","--theme-box-shadow-e","--theme-box-shadow-s","--theme-box-shadow-w","--theme-box-shadow","CSS_VAR_LIST","VARS_DEFAULT_STYLESHEET","reduce","allVars","varName","toCssPropertiesString","varsObject","entries","isRootHtmlElement","CssVars","_decorate","_initialize","_ComponentElement","F","static","decorators","newVars","priorTarget","$targets","$style","_handleCustomVarsChange","_handleTargetChange","_varStyleEle","clearCustomVarsFromTargetElements","stopPushingStylesToTargets","clearCustomVars","vars","setCustomVars","setCustomVarsOnTargetElements","target","type","theme","varNames","varsKeys","style","setProperty","bubble","cssPropName","removeProperty","cssVarsInst","targetEle","stylesheetContent","hasChildNodes","firstChild","createStyleElement"],"mappings":"0mCACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCC/Ee,SAASC,EAASC,GAC/B,OCJa,SAAyBA,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDGxBG,CAAeH,IEJT,SAA0BI,GACvC,GAAItB,OAAOuB,YAAY5B,OAAO2B,IAAkD,uBAAzC3B,OAAOkB,UAAUW,SAASpC,KAAKkC,GAAgC,OAAOH,MAAMM,KAAKH,GFG1FI,CAAgBR,IGJjC,WACb,MAAM,IAAIS,UAAU,wDHGkCC,4BIHxD,IAAAC,KAGA,SAAAnB,EAAAX,GAGA,GAAA8B,EAAA9B,GACA,OAAA8B,EAAA9B,GAAAhB,QAGA,IAAAW,EAAAmC,EAAA9B,IACAd,IACAC,KACAH,YAUA,OANAI,mCAGAH,OAGAU,EAAAX,QA0DA,OArDAF,MAGAA,MAGAA,oBACAA,UACAc,2BAA0CE,uBAK1ChB,gBACA,oBAAAmB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDrB,kBAEA,GADA,EAAAgD,IAAA1B,EAAAO,EAAAP,IACA,EAAA0B,EAAA,OAAA1B,EACA,KAAA0B,GAAA,iBAAA1B,QAAAE,WAAA,OAAAF,EACA,IAAAJ,EAAAJ,OAAAY,OAAA,MAGA,GAFA1B,OACAc,mCAAyCE,wBACzC,EAAAgC,GAAA,iBAAA1B,EAAA,QAAAT,KAAAS,EAAAO,EAAAnB,EAAAQ,EAAAL,EAAA,SAAAmC,GAAgH,OAAA1B,EAAA0B,IAAqBpB,cACrI,OAAAV,GAIAlB,gBACA,IAAAgD,EAAA1B,KAAAE,WACA,WAA2B,OAAAF,EAAA2B,SAC3B,WAAiC,OAAA3B,GAEjC,OADAtB,aACAgD,GAIAhD,kBAAsD,OAAAc,OAAAkB,UAAAC,eAAA1B,KAAAe,EAAA0B,IAGtDhD,OAIA6B,IAAAM,EAAA,cAAAb,EAAA0B,EAAAnB,IAAA,SCjFAP,GAAAO,EAAAnB,EAAAsC,EAAA,sBAAA9B,IAAO,MAAMgC,EACK,oBAEHC,OAA2BA,gBAC3BC,EAA2BA,EAHxB,oBAIHC,KAAyBA,KAC7BC,4DCPXnD,mGCAIoD,EAGJA,EAAK,WACJ,OAAOC,KADH,GAIL,IAECD,EAAIA,GAAKD,8BAAiCG,MAAM,QAC/C,MAAOT,GAEc,iBAAXG,SAAqBI,EAAIJ,QAOrChD,EAAOD,QAAUqD,0BCNV,MAaMG,EAbeJ,SAAS1B,KAAKrB,KAAKqB,KAAK0B,SAAS1B,KAAjC0B,CAaiBA,SAAS/C,KAAKqB,KAAM0B,SAAS/C,MAG7DoC,EAA2Be,EAAiB5C,OAAOkB,UAAUW,UAC7DgB,EAA2BC,GAAyB,oBAAlBjB,EAASiB,GAG3CC,EAA2B/C,OAAOC,eAElC+C,GAD2BhD,OAAOiD,iBACPjD,OAAOkD,MAClCjD,EAAiB,CAAC6C,EAAKK,EAAM5C,EAAOT,EAAQsD,EAAQC,KAAqBnD,KAAoBoD,QACtG,MAAMC,GACFF,eACAnD,cAaJ,OAVIJ,GAAUsD,GACVG,EAAWpD,IAAML,EACjByD,EAAWC,IAAMJ,IAEjBG,EAAWD,SAAWA,EACtBC,EAAWhD,MAAQA,GAGvBwC,EAAqBD,EAAKK,EAAMI,GAEzBT,GAKLvB,KACOE,EAAiBD,MAAMC,QAQvBgC,GAPiBb,EAAiBrB,EAAImC,SACrBd,EAAiBrB,EAAIoC,SACrBf,EAAiBrB,EAAIqC,QACtBhB,EAAiBrB,EAAIsC,OAIxBC,QAAQC,KAErBC,GADeF,QAAQG,MACTH,QAAQI,MAAQT,GAQrCU,GAJwB,oBAAuB9D,QAAUA,OAAOuB,UAAWvB,OAAOuB,SAI3DwC,YAAYlD,WAC5BmD,EAAMC,SACNC,EAAOF,EAAIE,KAEXC,EAAgBC,GAAWJ,EAAIG,cAAcC,GAE/B7B,EAAiBuB,EAAqBO,aACrC9B,EAAiBuB,EAAqBQ,cACtC/B,EAAiBuB,EAAqBS,cACtChC,EAAiBuB,EAAqBU,cACtCjC,EAAiBuB,EAAqBW,cACnClC,EAAiBuB,EAAqBY,iBCpCtDC,MAnCR,SAASA,EAAaC,KAAiBC,GAC1C,IAGI5F,EACAuB,EAJAsE,EAAcF,MACdG,EAAcF,EAAaG,OAC3BC,KAUJ,IAN4B,kBAAjBL,IACPK,EAAcL,EACdE,EAAcD,EAAaK,YAC3BH,EAAcF,EAAaG,QAG1B/F,EAAI,EAAGA,EAAI8F,EAAO9F,IACnB,GAAK4F,EAAa5F,GAIlB,IAAKuB,KAAOqE,EAAa5F,GACjB4F,EAAa5F,GAAG6B,eAAeN,KAE3ByE,GACAzC,EAASsC,EAAStE,KAClBgC,EAASqC,EAAa5F,GAAGuB,IAEzBsE,EAAStE,GAAOmE,KAAoBG,EAAStE,GAAMqE,EAAa5F,GAAGuB,IAGnEsE,EAAStE,GAAOqE,EAAa5F,GAAGuB,IAKhD,OAAOsE,GChDX,IAAIK,EAAiB,eAOjBC,EAAY,WACZ,GAA2B,oBAAhBC,aAA+BF,EAAeG,KAAKD,YAAY7D,YACtE,OAAO6D,YAIX,GAAuB,mBAAZE,SAA0BJ,EAAeG,KAAKC,QAAQ/D,YAAa,CAC1E,IAAIgE,EAAWD,QAAQE,UACvB,OAAO,SAA0BC,GAC7BF,EAASG,KAAKD,GAAIE,MAAM/D,GAAK4B,QAAQG,MAAM/B,KAMnD,IAAIgE,KACAC,KAaJ,OAAO,SAA6BJ,GAChCG,EAAWE,KAAKL,GACXI,IACDA,KAdR,SAASE,IACLC,WAAW,WACPJ,YACIA,EAAWb,OACXgB,IAEAF,MAEL,GARP,KAlBY,GAsCZI,KACJ,MAAMC,EAAkB,IAAIC,IAC5B,IAAInH,EAAGkB,EACP,MAAMkG,EAAa,KACf,MAAMC,MAAiBH,GAGvB,IAFAA,EAAgBI,QAChBL,KACKjH,EAAI,EAAGkB,EAAImG,EAAUtB,OAAQ/F,EAAIkB,EAAGlB,IACrCqH,EAAUrH,MC9CX,SAASuH,EAAuBC,GACnC,GAAIA,EAAKC,aAAeD,IAASA,EAAKC,YAAY7F,UAC9C,MAAM,IAAI8F,MAAM,0DDuDxBvB,EAASwB,MAAQC,KACbV,EAAgBW,IAAID,GACfX,IACDA,KACAd,EAASiB,MEpBFU,MA5BR,SAA6BC,EAAKC,EAAOJ,EAAUK,GACtD,IAAIC,EAAcF,EAAMG,MAAM,OAC1BC,KAmBJ,OAjBAF,EAAO9D,QAAQiE,IACXN,EAAIO,iBAAiBD,EAAQT,EAAUK,GACvCG,EAAYC,IACRE,OAAQ,IAAMR,EAAIS,oBAAoBH,EAAQT,EAAUK,MAczDvH,OAAOY,QACVmH,UAAWL,EACXG,OAAQ,WACJL,EAAO9D,QAAQiE,GAAUD,EAAYC,GAAQE,cClClD,SAASG,EAAQC,EAAQC,GAC5B,OAAO1G,MAAMN,UAAU2C,MAAMpE,KAAKwI,EAAOE,iBAAiBD,IAE/CF,eCUAI,GAVH,IAAIC,UAKJ,WACJ,OAAO,IAAIA,YCpBnB,MAAMC,EAAmBjI,OAAO,eAKnBkI,EAOTC,GAAGb,EAAQT,GAKP,OAJAuB,EAAY/F,KAAMiF,GAAQR,IAAID,GAIvB,IAAMuB,EAAY/F,KAAMiF,GAAQe,OAAOxB,GAQlDyB,KAAKhB,EAAQiB,GACTH,EAAY/F,KAAMiF,GAAQjE,QAAQwD,GAAYA,EAAS0B,IAM3DhC,QACI6B,EAAY/F,MAAMkE,SAS1B,SAAS6B,EAAYI,EAAMlB,GAIvB,OAHKkB,EAAKP,KACNO,EAAKP,GAAoB,IAAIQ,KAE5BnB,GAGAkB,EAAKP,GAAkBS,IAAIpB,IAC5BkB,EAAKP,GAAkB9E,IAAImE,EAAQ,IAAIlB,KAEpCoC,EAAKP,GAAkBnI,IAAIwH,IALvBkB,EAAKP,cCxCb,MAAMU,EAAUZ,IACVa,EAAe5I,iBAAO,SAU5B,SAAS6I,EAA2B7B,EAAK8B,GAC5C,OAAOA,EAAQC,QAAQC,KAAKC,GAAajC,EAAIzC,aAAa0E,IAqBvD,SAASC,EAASC,GACrB,IAAKR,EAAQD,IAAIS,GAAW,CACxB,IAAIC,GACAC,oBACAC,YAAa,KACbC,GAAI,IAAIrB,EACRsB,oBACAC,cAAe,KACfC,cAGJf,EAAQxF,IAAIgG,EAAUC,GAE1B,OAAOT,EAAQ7I,IAAIqJ,GAuChB,SAASQ,EAAmBC,GAC/B,IAAIR,EAAQS,EAAuBD,GAEnC,IAAKR,EAAMU,SAAU,CACjB,MAAMC,EAAgBX,EAAMU,YACtBE,EAAoBJ,EAAeE,SAIrCE,GACArH,EAAWqH,GAAmB3G,QAAQ4G,IAGlC,GAFAF,EAAcE,GAAYD,EAAkBC,GAExC7I,EAAQ2I,EAAcE,GAAUlB,SAAU,CAC1C,MAAMmB,EAAevF,KAAiBqF,EAAkBC,IAAaE,cACrEJ,EAAcE,GAAUlB,QAAQ1F,QAC5B+G,IAAkBL,EAAcK,KACfL,EAAcK,GAAiBF,OAMpE,OAAOd,EAAMU,SAUV,SAASD,EAAuBD,GAQnC,OAPKjB,EAAQD,IAAIkB,IACbjB,EAAQxF,IAAIyG,GACRE,SAAU,KACVR,YAAa,KACbe,cAAe,OAGhB1B,EAAQ7I,IAAI8J,cC5HhB,MAAMU,EAAmB,MAAQvI,IAAOwI,SACzCC,EAAgBxD,GAAOA,EAAIyD,WAAWC,YAAY1D,GAClD2D,EAAW3J,GAAK,iBAAoBA,EAMnC,SAAS4J,IACZ,OAAQ1G,EAAK2G,kBAAoB3G,EAAK4G,iBAChCR,KAAsBvI,IAAOwI,SAASQ,cCOhD,MAAMC,EAAuB9G,EAAK2G,kBAAoB3G,EAAK4G,aACrDG,GAAoBC,WAAeC,cAAkBC,aACrDC,EAAcrJ,OAAOsJ,eACrBC,EAAa5L,OAAO6L,OAAO7L,OAAOY,OAAO,OACzCkL,EAAYzL,OAAO,gBACzB,IAAI0L,WAQSC,UAAyB5H,YAClC2C,eAAekF,GACX,MAAM1J,EAAO2J,SAASD,IAASvJ,KAE/B,OAwhBR,SAAyByJ,GACrB,MAAMC,UAAEA,EAAFA,WAAaC,GAAeF,EAAUpF,YACxCqF,GAAaf,EACTc,EAAUG,WACVH,EAAUI,KAAOJ,EAAUG,WAG3BH,EAAUI,KAAOJ,EAAUhB,cAAe1K,KAAM4L,IAIpDF,EAAUI,KAAOJ,EAGrBA,EAAUK,cAAcL,EAAUM,cAClCN,EAAUO,UAfd,CAzhBuBnK,GACRA,EAmBXkC,qBAAuB,MAAM,IAAIuC,MAAM,uBAKvC2F,cAAc9M,GACVA,EAAOA,GAAQ6C,KAAK+B,QAEhBiH,EAAYvL,IAAIN,GACZ6L,EAAYvL,IAAIN,KAAU6C,MAC1BsB,KAAenE,yEAKvB6L,EAAYkB,OAAO/M,EAAM6C,MAS7BmK,0BAA4B,OAAO,EAOnCT,uBAAyB,SAOzBC,wBAA0B,MAAO,OAOjCS,sBAKI,MAAO,cAoBXH,yBAcAI,8BAAgC,OAAOzB,EAGvC0B,gCACI,IAAIvD,EAAQS,EAAuBxH,MAEnC,IAAK+G,EAAMiB,cAAe,CACtB,MAAMuC,EAAWjD,EAAmBtH,MACpC+G,EAAMiB,cAAgB1H,EAAWiK,GAAUC,OAAO9L,GAAK6L,EAAS7L,GAAG+L,MAGvE,OAAO1D,EAAMiB,cAWjB0C,YAGI,GAFAvG,EAAuBnE,MAEnBqJ,EACA,OAGJA,KAEA,MAAMsB,EAAkBrD,EAAmBtH,KAAKqE,aAChD,IAAIqG,KACJ,MAAMxD,EAAKL,EAAS7G,MAAMkH,GACpB0D,EAAqB,IAAM1D,EAAGjB,KAAKmD,GA2CzC,OAzCA9I,EAAWqK,GAAiB3J,QAAQ4G,IAChC,IAAK+C,EAAgB/C,KAAc+C,EAAgB/C,GAAUE,SAAU,CACnE,MAAM+C,EAAsB,IAAM3D,EAAGjB,KAAK2B,GAC1C,IAAIkD,EAAYH,EAAgB/C,GAAUnI,QAAQ1C,KAAKiD,MAGnD2K,EAAgB/C,GAAU6C,OACzBE,EAAgB/C,GAAUmD,SAC3BvE,EAA2BxG,KAAM2K,EAAgB/C,IAEjDkD,EFnKb,SAAiCnG,EAAK8B,GACzC,IAAIuE,EAAU,GAOd,OANAvE,EAAQC,QAAQC,KAAKC,IACjB,GAAIjC,EAAIzC,aAAa0E,GAEjB,OADAoE,EAAUrG,EAAIxC,aAAayE,QAI5BoE,EARJ,CEmKiDhL,KAAM2K,EAAgB/C,IACnD5H,KAAKvB,eAAemJ,KAG3BkD,EAAY9K,KAAK4H,UACV5H,KAAK4H,IAIhBrK,EACImN,EACA9C,SAEA,WACI,OAAOkD,GAEXG,IACIA,EAAWN,EAAgB/C,GAAU4C,OAAOzN,KAAKiD,KAAMiL,GACvDlI,EAASwB,MAAMsG,GACf9H,EAASwB,MAAMqG,GACRE,EAAYG,OAEvB,MAMZ1N,EAAeyC,KAAM,QAAS0K,cAAOQ,GAAWA,GAAW,GAAM,GACjE7B,KAEOqB,EAMXS,uBAEI,OADAhH,EAAuBnE,MAChBM,EAAWN,KAAKqE,YAAYoD,UAC9B+C,OAAO5C,GAAY5H,KAAKqE,YAAYoD,SAASG,GAAUwD,UACvDC,MAAMzD,KAAc5H,KAAK0K,MAAM9C,IAOxCP,gBAEI,OADAlD,EAAuBnE,MAChB6G,EAAS7G,MAAMqH,UAS1BiE,UACI,OAAOtL,KAAK6J,KAMhB0B,UACI,GAAIjF,EAAQD,IAAIrG,MAAO,CACnB,MAAM+G,EAAQF,EAAS7G,MACvBsG,EAAQN,OAAOhG,MACX+G,EAAMK,gBACNoE,aAAazE,EAAMK,eACnBL,EAAMK,cAAgB,MAE1BL,EAAMI,iBAAiBjG,OAAO,GAAGF,QAAQyK,GAAMA,KAE/CzL,KAAKoI,YACLpI,KAAKoI,WAAWC,YAAYrI,MAEhCA,KAAK0L,aAOTC,UAAUnH,GACNqC,EAAS7G,MAAMmH,iBAAiBzD,KAAKc,GAWzCoH,EAAEpG,GACE,OAAOxF,KAAKsL,IAAIO,cAAcrG,GAWlCsG,GAAGtG,GACC,OAAOF,EAAQtF,KAAKsL,IAAK9F,GAa7BuG,aAGI,GAFA5H,EAAuBnE,MAEnBqJ,EACA,OAGJ,MAAM2C,EAAU,KACZ,IAAKhM,KAAKqH,UACN,OAGJ,MAAM4E,EAAejM,KAAKkM,cAEtB,kBAAqBD,GAAgBA,KACrCjM,KAAKmM,SAASnM,KAAKoM,UACnBpM,KAAKqM,cAQb,OAJAhD,KACA9L,EAAeyC,KAAM,SAAUgM,GAC/B3C,KAEO2C,EAQXjC,mBAGI,GAFA5F,EAAuBnE,MAEnBqJ,EACA,OAGJ,MAAMiD,EAAgB,KAClBvJ,EAASwB,MAAMvE,KAAK+L,SAOxB,OAJA1C,KACA9L,EAAeyC,KAAM,eAAgBsM,GACrCjD,KAEOiD,EAUXH,SAASI,GACL,IAAIC,EAAOD,EAENhE,MACDiE,ED9UL,SAAgCD,EAAcE,GACjD,GAAIxE,IAAoB,CACpB,MAAMyE,EAAuBpE,EAASiE,GAChCI,EAAsBnF,EAAuBiF,EAAYpI,aAC/D,IACImI,GADAvF,YAACA,GAAe0F,EAqCpB,OAhCK1F,IACD0F,EAAoB1F,YAAcA,EAAcnF,EAAc,YAC1D4K,EACAzF,EAAY2F,UAAYL,EAExBtF,EAAYjF,YAAYuK,EAAaM,eA7B9C,SAAmBzC,EAAUqC,GAC5BxE,KACAvI,IAAOwI,SAAS4E,gBAAgB1C,EAAUqC,EAAYpI,YAAYtC,SAFnE,CA+BckF,EAAcwF,IAIvBC,GACAzF,EAAY2F,UAAYL,EACxBC,EAAO5K,SAASmL,WAAW9F,EAAY+F,YACvC/F,EAAYgG,YAAc,IAE1BT,EAAOD,EAKNC,EAAKQ,UACNR,EAAKQ,QAAUR,GAInB9M,IAAOwI,SAASgF,mBAAmBV,EAAMC,EAAYpI,YAAYtC,SAKjEuD,EAAQkH,EAAM,SAASxL,QAAQmH,GACxBqE,GCqSIW,CAAuBZ,EAAcvM,OAASuM,GAIrD,iBAAoBC,EACpBxM,KAAKsL,IAAIsB,UAAYJ,GAErBxM,KAAKsL,IAAI2B,YAAc,GACvBjN,KAAKsL,IAAItJ,YAAYwK,IAY7BxC,UAEQ,SAAUhK,MAIVA,KAAKoN,OAObC,WAEQ,UAAWrN,MAIXA,KAAKsN,QAGL,YAAatN,MAMbA,KAAKuN,UASbrB,cAUAE,SAAU,MAAQ,gBAKlBC,aAKAmB,aAEQ,cAAexN,MAIfA,KAAKyN,YAOb/B,cAuBAzF,KAAKyH,EAAWxH,EAAMyH,GAClB,MAAMC,EAAqBF,EAAUG,cAC/BjJ,EAAQ,IAAIkJ,YACdJ,EACApL,KAAiBtC,KAAKqE,YAAYgG,iBAAkBsD,GAAaI,OAAQ7H,KAGzE,mBAAsBlG,KAAK4N,IAC3B5N,KAAK4N,GAAoBhJ,GAG7B5E,KAAKgO,cAAcpJ,GAevBkB,GAAGmI,EAAYzJ,EAAUK,GACrB,OAAOH,EAAoB1E,KAAMiO,EAAYzJ,EAAUK,GAY3DiF,cAActF,EAAUoD,GACpB,OAAOf,EAAS7G,MAAMkH,GAAGpB,GAAG8B,GAAYwB,EAAW5E,GAMvD0J,yBAAyB/Q,EAAMgR,EAAUlD,GACrC,MAAMxD,EAAYH,EAAmBtH,KAAKqE,aACtCoD,EAAStK,KACTA,EAAOsK,EAAStK,GAAMA,MAE1B6C,KAAK0K,MAAMvN,GAAQ8N,EAGvBmD,oBACI,MAAMrH,EAAQF,EAAS7G,MAEnB+G,EAAMK,gBACNoE,aAAazE,EAAMK,eACnBL,EAAMK,cAAgB,MAGrBmB,KD1cN,SAAuC8F,GACtCpG,KACAvI,IAAOwI,SAASoG,aAAaD,GAF9B,CC2cmCrO,MAGlC+G,EAAMM,aACNrH,KAAKqN,WACLrN,KAAK+J,eAGTwE,uBAII,GAAIjI,EAAQD,IAAIrG,MAAO,CACnB,MAAM+G,EAAQF,EAAS7G,MAClB+G,EAAMK,gBACPL,EAAMK,cAAgBxD,WAAW5D,KAAKuL,QAAQnN,KAAK4B,MAAOA,KAAKqE,YAAY8F,eAE/EpD,EAAMM,aAGVrH,KAAKwN,6HAthBAlE,aAgBSJ,GCjDtB,MAAMsF,EAAwB,QACxBC,GAAOC,GAAOA,EASb,SAASjO,GAAKkO,MACjB,OAAIA,EAAQxQ,KAAOwQ,EAAQC,KAChBC,MAAmBF,GAEvBE,GAAezQ,KAAK,KAAMuQ,GAGrC,SAASE,GAAeF,GAASxQ,IAACA,EAADA,YAAM2Q,EAAN3Q,WAAmB0C,IAChD,MAAMkO,EAgFV,SAAsB5R,EAAM2R,EAAaE,EAAWvI,GAahD,MAAMwI,EAAqB3M,GAEnBnF,OACAsN,QACAW,YACAL,WACAtL,QAASqP,GAAeL,GACxBjE,OAAQwE,GAAaP,GACrB/H,YAGJD,GAyCJ,OApCIwI,EAAmBlE,UACnBkE,EAAmBxE,QACnBwE,EAAmBxP,QAAUwP,EAAmBzE,OAAS,WAmBrD,OAlBiBhE,EAA2BxG,KAAMiP,KAuBtD9R,EAAK0Q,gBAAkB1Q,GACvB8R,EAAmBvI,QAAQhD,KAAKvG,EAAK0Q,eAKrCW,EAAsBvL,KAAK9F,IAC3B8R,EAAmBvI,QAAQhD,KHhG5B,SAAsBwL,GACzB,OAAOA,EAAIC,QAAQ,WAAY,CAACC,EAAOC,IAAO,IAAMA,EAAGxB,eADpD,CGgG8C1Q,IAG1C8R,EAjEX,CA/EQ9Q,EACA2Q,GAAejO,EAAWpD,IAC1BoD,EAAWC,IACX6N,GAEEW,EAAgBC,GAAuBpR,EAAKA,EAAK4Q,GAOvD,OAJIA,EAAerI,UACf4I,EAAcE,OAAST,EAAerI,QAAQ+I,IAAIC,GAAaH,GAAuBG,EAAWvR,KAG9FmR,EAmBX,SAASC,GAAuBpR,EAAKwR,EAAiBC,GAClD,MAAMC,GACF1R,MACAyQ,KAAM,SACNkB,UAAW,YACXjP,YACIF,gBACAlD,MAEI,OADA0G,EAAuBnE,MAChBA,KAAK0K,MAAMiF,IAEtB7O,IAAImK,GAEA,OADA9G,EAAuBnE,MAChBA,KAAK0K,MAAMiF,GAAmB1E,KAmBjD,OAdI2E,IACAC,EAAoBE,SAAW,SAAUC,GAEhCA,EAAMvR,eAAe,aACtBlB,EACIyS,EACA,WACA1N,EAAahF,OAAOY,OAAO,MAAO8R,EAAMvI,WAGhDuI,EAAMvI,SAAStJ,GAAOyR,IAIvBC,ECjFJ,SAASzR,GAAKuQ,GACjB,OAAIA,EAAQxQ,KAAOwQ,EAAQC,KAChBqB,GAAOtB,GAEXsB,GAGX,SAASA,GAAOC,GACZ,MAAMtB,KAACA,EAADA,IAAOzQ,EAAPyQ,WAAY/N,GAAcqP,EAChC,GAAa,WAATtB,GAAqB/N,EAAWhD,MAAO,CACvC,IAAIsS,KACJ,MAAMC,EAASvP,EAAWhD,aAEnBgD,EAAWhD,aACXgD,EAAWD,SAElBC,EAAWpD,IAAM,WAGb,GAFA0G,EAAuBnE,MAEnBmQ,EACA,OAEJA,KAEA,MAAME,EAAcD,EAAOhS,KAAK4B,MAIhC,OAHAzC,EAAeyC,KAAM7B,EAAKkS,GAC1BF,KAEOE,GAIf,OAAOH,ECvCX1T,2UCWO,SAAS8I,EAAQC,EAAQC,GAC5B,OAAO1G,MAAMN,UAAU2C,MAAMpE,KAAKwI,EAAOE,iBAAiBD,ICDvD,SAAS8K,EAAWC,EAAI/K,GAC3B,SAAK+K,IAAO/K,KAIR+K,EAAGC,SACHD,EAAGE,iBACHF,EAAGG,mBACHH,EAAGI,oBACHJ,EAAGK,uBACHL,EAAGM,kBACL9T,KAAKwT,EAAI/K,GCTR,MAaMtF,EAbeJ,SAAS1B,KAAKrB,KAAKqB,KAAK0B,SAAS1B,KAa7B0S,CAAahR,SAAS/C,KAAKqB,KAAM0B,SAAS/C,MAS7DuD,GAN2BJ,EAAiB5C,OAAOkB,UAAUW,UAIlC7B,OAAOC,eACPD,OAAOiD,iBACPjD,OAAOkD,MAsBzC3B,KASOkC,GARiBjC,MAAMC,QACNmB,EAAiBrB,EAAImC,SACrBd,EAAiBrB,EAAIoC,SACrBf,EAAiBrB,EAAIqC,QACtBhB,EAAiBrB,EAAIsC,OAIxBC,QAAQC,KAU5BI,GATsBL,QAAQG,MACTH,QAAQI,KAIL,oBAAuB7D,QAAUA,OAAOuB,UAAWvB,OAAOuB,SAI3DwC,YAAYlD,WAC5BmD,EAAMC,SAGNE,GAFOH,EAAIE,KAEKE,GAAWJ,EAAIG,cAAcC,IAC7CgP,EAAiB7K,GAAQvE,EAAIoP,eAAe7K,GAAQ,IACpDlE,EAAc9B,EAAiBuB,EAAqBO,aC7EpDgP,GD8Ee9Q,EAAiBuB,EAAqBQ,cACtC/B,EAAiBuB,EAAqBS,cACtChC,EAAiBuB,EAAqBU,cACtCjC,EAAiBuB,EAAqBW,cACnClC,EAAiBuB,EAAqBY,iBClF1C/E,OAAO6L,QAM9B8H,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UACnBC,kBAAmB,UAGnBC,8BAA+B,UAC/BC,8BAA+B,UAC/BC,8BAA+B,UAC/BC,8BAA+B,UAC/BC,8BAA+B,UAI/BC,iCAAkC,UAClCC,iCAAkC,UAClCC,iCAAkC,UAClCC,iCAAkC,UAClCC,iCAAkC,UAKlCC,+BAAgC,UAChCC,+BAAgC,UAChCC,+BAAgC,UAChCC,+BAAgC,UAChCC,+BAAgC,UAIhCC,iCAAkC,UAClCC,iCAAkC,UAClCC,iCAAkC,UAClCC,iCAAkC,UAClCC,iCAAkC,UAKlCC,+BAAgC,UAChCC,+BAAgC,UAChCC,+BAAgC,UAChCC,+BAAgC,UAChCC,+BAAgC,UAIhCC,mBAAoB,uBACpBC,mBAAoB,uBAGpBC,qBAAsB,mCAGtBC,+BAAgC,sCAChCC,+BAAgC,sCAEhCC,6BAA8B,oCAC9BC,6BAA8B,oCAE9BC,+BAAgC,sCAChCC,+BAAgC,sCAEhCC,4BAA6B,mCAC7BC,4BAA6B,mCAE7BC,6BAA8B,oCAC9BC,6BAA8B,oCAM9BC,wBAAyB,OACzBC,uBAAwB,OACxBC,sBAAuB,OACvBC,sBAAuB,OACvBC,sBAAuB,OACvBC,uBAAwB,OAExBC,oBAAqB,2BAErBC,sBAAuB,uJACvBC,gCAAiC,uFAMjCC,uBAAwB,QACxBC,uBAAwB,MAExBC,uBAAwB,uBACxBC,6BAA8B,uBAE9BC,2BAA4B,MAC5BC,2BAA4B,MAC5BC,2BAA4B,OAC5BC,2BAA4B,OAC5BC,wBAAyB,gCAEzBC,iBAAkB,gFAClBC,uBAAwB,sFAMxBC,oBAAqB,IACrBC,oBAAqB,UACrBC,oBAAqB,SACrBC,oBAAqB,UACrBC,oBAAqB,OACrBC,oBAAqB,UACrBC,oBAAqB,SACrBC,oBAAqB,UACrBC,oBAAqB,OACrBC,oBAAqB,UACrBC,kBAAmB,yBAMnBC,uBAAwB,oGACxBC,uBAAwB,mGACxBC,uBAAwB,mGACxBC,uBAAwB,oGACxBC,qBAAsB,ooHCrInB,MACDC,EAAe/V,EAAW0Q,GAC1BsF,EAA0BD,EAAaE,OAAO,CAACC,EAASC,IAC1DD,MAAcC,MAAYzF,EAAYyF,MAAc,KAErD,IACGC,EAAwBC,GACnBrZ,OACFsZ,QAAQD,GACRJ,OAAO,CAACrH,GAAM3Q,EAAUV,KAAYqR,MAAU3Q,MAAaV,KAAW,IAEzEgZ,EAAoBlS,GAAO2L,EAAW3L,EAAK,SAS1C,IAAMmS,ulEAAbC,CAAA,cAAAC,EAAAC,GAAA,OAAAC,gBAAOD,EAAuChN,eAAAV,GAAAC,SAAAD,GAAAyN,EAAAhX,QAA9C9C,IAAA0R,KAAA,QAAAuI,QAAA,EAAAhZ,IAAA,UAAAN,MAAA,IACqB,aADrB+Q,KAAA,QAAAuI,QAAA,EAAAhZ,IAAA,cAAAN,MAAA,IAQyBmT,IARzBpC,KAAA,MAAAuI,QAAA,EAAAhZ,IAAA,WAAAN,MAAA,IAgBewY,EAAalV,MAAM,KAhBlCyN,KAAA,SAAAzQ,IAAA,SAAAN,MAAA,wFA4BMyY,kCA5BN1H,KAAA,MAAAwI,YAyCK3W,GAzCLtC,IAAA,OAAAN,MAAA,IA2CemT,IA3CfpC,KAAA,MAAAzQ,IAAA,OAAAN,MA6CawZ,IACD,iBAAoBA,IACpBjW,QAAQI,KAAK,gCACb6V,MAEGA,KAlDfzI,KAAA,MAAAwI,YAoEK3W,GAAMgK,MAAM,KApEjBtM,IAAA,SAAAN,MAAA,IAsEe,OAtEf+Q,KAAA,SAAAzQ,IAAA,UAAA8L,QA0EQjK,KAAKuG,IACD+Q,YAAa,KAEbC,SAAU,KACVC,OAAQ,MAGZxX,KAAK8F,GAAG,cAAe9F,MAGvBA,KAAK8J,cAAc9J,KAAKyX,wBAAyB,QAGjDzX,KAAK8J,cAAc9J,KAAK0X,oBAAqB,aAvFrD9I,KAAA,SAAAzQ,IAAA,YAAA8L,QA2FQjK,KAAK2X,aAAe3X,KAAK4L,EAAE,eAC3B5L,KAAKyX,0BACLzX,KAAK0X,yBA7Fb9I,KAAA,SAAAzQ,IAAA,aAAA8L,QAiGQ2N,EAAkC5X,MAClC6X,EAA2B7X,SAlGnC4O,KAAA,SAAAwI,YAqGKhZ,GArGLD,IAAA,0BAAA8L,QAuGQ6N,EAAgB9X,KAAMA,KAAK+X,MAAM,GACjCC,EAAchY,KAAMA,KAAK0K,MAAMqN,MAE/BH,EAAkC5X,MAClCiY,EAA8BjY,SA3GtC4O,KAAA,SAAAwI,YA8GKhZ,GA9GLD,IAAA,sBAAA8L,QAiHYjK,KAAKuG,GAAc+Q,aAAetX,KAAKuG,GAAc+Q,cAAgBtX,KAAK0K,MAAMwN,SAChFN,EAAkC5X,MAClC6X,EAA2B7X,OAG3BA,KAAK0K,MAAMwN,QACXD,EAA8BjY,SAvH1C4O,KAAA,SAAAzQ,IAAA,cAAA8L,MA2HgB/C,GACQ,gBAAZA,EAAGiR,MAA0BjR,EAAG6G,SAChC/N,KAAKkE,QACLlE,KAAK0K,MAAMqN,KAAO7Q,EAAG6G,QAAU7G,EAAG6G,OAAOqK,MAAQlR,EAAG6G,OAAOqK,MAAQlR,EAAG6G,WA9HlFa,KAAA,SAAAzQ,IAAA,QAAA8L,QAwIYjK,KAAK0K,MAAMqN,MACXD,EAAgB9X,KAAMA,KAAK0K,MAAMqN,MAErC/X,KAAK0K,MAAMqN,WA3InBnJ,KAAA,SAAAzQ,IAAA,cAAA8L,QAoJQ,OAAOjK,KAAKqE,YAAYgU,cApJH/O,GAwJ7B,SAAS0O,EAAcrT,EAAKoT,EAAM9R,GAAO,GACrC,MAAMqS,EAAWhY,EAAWyX,GAExBO,EAAS3V,SAELgC,EAAIgT,cACJhT,EAAIgT,aAAa/K,UAAY,GAC7B5K,EACI2C,EAAIgT,aACJ5G,gBAEb2F,EAAsBqB,aAOU,UAAhBpT,EAAI5C,SACX4C,EAAIiI,UAAY,GAChB5K,EAAY2C,EAAKoM,gBAE1B2F,EAAsBqB,cAKbO,EAAStX,QAAQyV,IACb9R,EAAI4T,MAAMC,YAAY/B,EAASsB,EAAKtB,MAIxCxQ,GAAQtB,EAAIsB,MAKZtB,EAAIsB,KAAK,SAAU,MAAOwS,QAAQ,KAK9C,SAASX,EAAgBnT,EAAKoT,EAAM9R,GAAO,GACvC,MAAMqS,EAAWhY,EAAWyX,GAExBO,EAAS3V,SACT2V,EAAStX,QAAQ0X,IACO,UAAhB/T,EAAI5C,QACJ4C,EAAIiI,UAAY,GAEhBjI,EAAI4T,MAAMI,eAAeD,KAI7BzS,GAAQtB,EAAIsB,MACZtB,EAAIsB,KAAK,SAAU,MAAOwS,QAAQ,KAK9C,SAASR,EAA8BW,GACnC,MAAM7R,EAAQ6R,EAAYrS,IACpB2R,OAACA,EAADH,KAASA,GAAQa,EAAYlO,MAE/BwN,IACKnR,EAAMwQ,WAEHxQ,EAAMwQ,SADN,iBAAoBW,EACH5S,EAAQ3D,EAAKuW,IAEZA,IAI1BnR,EAAMwQ,SAASvW,QAAQ6X,IAEfhC,EAAkBgC,KAEb9R,EAAMyQ,SACPzQ,EAAMyQ,OAoC1B,SAA4BsB,GACxB,MAAMP,EAAQzW,EAAc,SACtBD,EAAOF,EAAIE,KAEjB0W,EAAMJ,KAAO,WACbnW,EAAYuW,EAAOxH,EAAe+H,IAE9BjX,EAAKkX,gBACLlX,EAAKI,aAAasW,EAAO1W,EAAKmX,YAE9BhX,EAAYH,EAAM0W,GAGtB,OAAOA,EAjDwBU,CAAmB,KAEtCJ,EAAY9R,EAAMyQ,QAGtBQ,EAAca,EAAWd,GAAM,KAGnCa,EAAYrS,GAAc+Q,YAAcY,GAIhD,SAASN,EAAkCgB,GACvC,MAAM7R,EAAQ6R,EAAYrS,GAEtBQ,EAAMwQ,UACNxQ,EAAMwQ,SAASvW,QAAQ6X,IACfhC,EAAkBgC,KAClBA,EAAY9R,EAAMyQ,QAEtBM,EAAgBe,EAAWD,EAAYlO,MAAMqN,MAAM,KAK/D,SAASF,EAA2Be,GAChC,MAAM7R,EAAQ6R,EAAYrS,GACtBQ,EAAMyQ,SACNzQ,EAAMyQ,OAAOpP,WAAWC,YAAYtB,EAAMyQ,QAC1CzQ,EAAMyQ,OAAS,MAEfzQ,EAAMwQ,WACNxQ,EAAMwQ,SAAW,MCrSzBT,EAAQ5M","file":"css-vars-element.import.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","module.exports = (WeakMap.WeakMap = WeakMap);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nnextTick.queue = callback => {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n};\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n","/**\r\n * Check if the given `this` value matches its own Constructor's prototype, and\r\n * if so, throw an error.\r\n * Good to use with lazy properties that set themselves up on first access\r\n *\r\n * @param {Object} THIS\r\n * @throws\r\n */\r\nexport function throwIfThisIsPrototype(THIS) {\r\n    if (THIS.constructor && THIS === THIS.constructor.prototype) {\r\n        throw new Error(\"Can not be accessed directly on constructor.prototype!\");\r\n    }\r\n}","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","const LISTENER_STORAGE = Symbol(\"state\");\r\n\r\n/**\r\n * Supper tiny minimalist EventEmitter\r\n */\r\nexport class Ev {\r\n    /**\r\n     * Set an event listener\r\n     * @param {String} evName\r\n     * @param {Function} callback\r\n     * @returns {EvOff}\r\n     */\r\n    on(evName, callback) {\r\n        getStoreFor(this, evName).add(callback);\r\n        /**\r\n         * @typedef {Function} EvOff\r\n         */\r\n        return () => getStoreFor(this, evName).delete(callback);\r\n    }\r\n\r\n    /**\r\n     * Emit an event\r\n     * @param {String} evName\r\n     * @param {*} data\r\n     */\r\n    emit(evName, data) {\r\n        getStoreFor(this, evName).forEach(callback => callback(data));\r\n    }\r\n\r\n    /**\r\n     * Clear the all the event listeners\r\n     */\r\n    clear() {\r\n        getStoreFor(this).clear();\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @return {Map|Set}\r\n *  If called with no `evName`, then the entire store is returned (a `Map`)\r\n */\r\nfunction getStoreFor(inst, evName) {\r\n    if (!inst[LISTENER_STORAGE]) {\r\n        inst[LISTENER_STORAGE] = new Map();\r\n    }\r\n    if (!evName) {\r\n        return inst[LISTENER_STORAGE];\r\n    }\r\n    if (!inst[LISTENER_STORAGE].has(evName)) {\r\n        inst[LISTENER_STORAGE].set(evName, new Set());\r\n    }\r\n    return inst[LISTENER_STORAGE].get(evName);\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport dataStore from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport {Ev} from \"@purtuga/common/src/jsutils/Ev\"\r\nimport { isArray, objectKeys } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"@purtuga/common/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\n/**\r\n * Get the prop value from the possible HTML attributes (propName + aliases)\r\n *\r\n * @param ele\r\n * @param propDef\r\n * @returns {string}\r\n */\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            isCssScopingDone: false,\r\n            templateEle: null,\r\n            ev: new Ev(),\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false\r\n        };\r\n\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        const statePropsDef = state.propsDef = {};\r\n        const componentPropsDef = ComponentClass.propsDef;\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (componentPropsDef) {\r\n            objectKeys(componentPropsDef).forEach(propName => {\r\n                statePropsDef[propName] = componentPropsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(statePropsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, componentPropsDef[propName], { _isAlias: true });\r\n                    statePropsDef[propName].aliases.forEach(\r\n                        propNameAlias => !statePropsDef[propNameAlias] &&\r\n                                        (statePropsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            templateEle: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"@purtuga/common/src/jsutils/getGlobal\"\r\nimport {domFind} from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {createElement, head} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {getComponentClassState} from \"./utils.js\"\r\n\r\n//===========================================================================================\r\nexport const supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\nconst removeElement = ele => ele.parentNode.removeChild(ele);\r\nconst isString = s => \"string\" === typeof s;\r\n\r\n/**\r\n * if runtime env. supports shadowRoot\r\n * @returns {boolean}\r\n */\r\nexport function supportsNativeShadowDom() {\r\n    return (head.createShadowRoot || head.attachShadow) &&\r\n        (!supportsShadyCSS() || GLOBAL.ShadyCSS.nativeShadow)\r\n}\r\n\r\n/**\r\n * Scopes the CSS of a given template for the Component by using ShadyCSS.\r\n *\r\n * @param template\r\n * @param eleInstance\r\n */\r\nexport function scopeCss (template, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(template, eleInstance.constructor.tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Prepares the rendered content by removing style elements - since they were sopped\r\n * during `scopeCss`\r\n *\r\n * @param renderedContent\r\n * @param componentInstance\r\n *\r\n * @return {HTMLElement|DocumentFragment}\r\n */\r\nexport function prepareRenderedContent(renderOutput, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        const isRenderOutputString = isString(renderOutput);\r\n        const ComponentClassState = getComponentClassState(eleInstance.constructor);\r\n        let {templateEle} = ComponentClassState;\r\n        let view;\r\n\r\n        // If Styles have not yet been scoped in the HEAD of the element for this CE Class,\r\n        // then do it now this occurs only once per Component.\r\n        if (!templateEle) {\r\n            ComponentClassState.templateEle = templateEle = createElement(\"template\");\r\n            if (isRenderOutputString) {\r\n                templateEle.innerHTML = renderOutput;\r\n            } else {\r\n                templateEle.appendChild(renderOutput.cloneNode(true));\r\n            }\r\n            scopeCss(templateEle , eleInstance);\r\n        }\r\n\r\n        // If the input was a string, then get a document fragment out of it\r\n        if (isRenderOutputString) {\r\n            templateEle.innerHTML = renderOutput;\r\n            view = document.importNode(templateEle.content, true);\r\n            templateEle.textContent = \"\";\r\n        } else {\r\n            view = renderOutput;\r\n        }\r\n\r\n        // Need to prepare this DOM by calling ShadyCSS.prepareTemplateDom so\r\n        // that scoping classes are applied\r\n        if (!view.content) { // FIXME: should use isTemplate()\r\n            view.content = view;\r\n        }\r\n\r\n        // FIXME: this is dangerous because it expects a certain internal implementation in prepareTemplateDom()\r\n        GLOBAL.ShadyCSS.prepareTemplateDom(view, eleInstance.constructor.tagName);\r\n\r\n        // TODO: any momoization can happen here?\r\n\r\n        // Remove <style> element\r\n        domFind(view, \"style\").forEach(removeElement);\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport {nextTick} from \"@purtuga/common/src/jsutils/nextTick.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {\r\n    objectKeys,\r\n    defineProperty,\r\n    consoleWarn,\r\n    head\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport domAddEventListener from \"@purtuga/common/src/domutils/domAddEventListener\"\r\nimport domFind from \"@purtuga/common/src/domutils/domFind\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils\"\r\nimport {\r\n    styleComponentInstanceElement,\r\n    prepareRenderedContent,\r\n    supportsNativeShadowDom\r\n} from \"./polyfill-support\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = head.createShadowRoot || head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\nconst PROPS_NOOP = Object.freeze(Object.create(null));\r\nconst EVENT_ANY = Symbol(\"ev.props.any\");\r\nlet lazySetupUnderway = false;\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nexport class ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n    static propsDef = PROPS_NOOP;\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                consoleWarn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 0; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() {\r\n        // fixme: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.template is Deprecated! Use .render() method`);\r\n        }\r\n        return \"<div></div>\";\r\n    }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(/*eleInstance*/) {\r\n        // FIXME: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.renderTemplate is NO LONGER SUPPORTED! Use .render() method`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        lazySetupUnderway = true;\r\n\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n        const ev = getState(this).ev;\r\n        const notifyAnyListeners = () => ev.emit(EVENT_ANY);\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                const notifyPropListeners = () => ev.emit(propName);\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                // FIXME: convert this call to defineProperty()\r\n                defineProperty(\r\n                    props,\r\n                    propName,\r\n                    undefined,\r\n                    function getProp () {\r\n                        return propValue;\r\n                    },\r\n                    newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n                        nextTick.queue(notifyPropListeners);\r\n                        nextTick.queue(notifyAnyListeners);\r\n                        return propValue = newValue;\r\n                    },\r\n                    true,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n\r\n        defineProperty(this, \"props\", props, undefined, undefined, true, true, false);\r\n        lazySetupUnderway = false;\r\n\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean indicating if Component has all required props fulfilled\r\n     */\r\n    get hasRequiredProps() {\r\n        throwIfThisIsPrototype(this);\r\n        return objectKeys(this.constructor.propsDef)\r\n            .filter(propName => this.constructor.propsDef[propName].required)\r\n            .every(propName => !!this.props[propName]);\r\n    }\r\n\r\n    /**\r\n     * returns a boolean indicating if component is connected to DOM\r\n     * @return {Boolean}\r\n     */\r\n    get isMounted() {\r\n        throwIfThisIsPrototype(this);\r\n        return getState(this).isMounted\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n        this.didDestroy();\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        return domFind(this.$ui, selector);\r\n    }\r\n\r\n    /**\r\n     * Updates the component's DOM by running through the render lifecycle of:\r\n     *\r\n     *  `willRender()`\r\n     *  `render()`\r\n     *  `didRender()`\r\n     *\r\n     * This method probably should not be called directly. It is automatically\r\n     * called when props change\r\n     */\r\n    get update() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const _update = () => {\r\n            if (!this.isMounted) {\r\n                return;\r\n            }\r\n\r\n            const shouldRender = this.willRender();\r\n\r\n            if (\"boolean\" !== typeof shouldRender || shouldRender) {\r\n                this._setView(this.render());\r\n                this.didRender();\r\n            }\r\n        };\r\n\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"update\", _update);\r\n        lazySetupUnderway = false;\r\n\r\n        return _update;\r\n    }\r\n\r\n    /**\r\n     * An instance bound method used to queue the render update cycle\r\n     * @type Function\r\n     * @private\r\n     */\r\n    get _queueUpdate() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const __queueUpdate = () => {\r\n            nextTick.queue(this.update);\r\n        };\r\n\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"_queueUpdate\", __queueUpdate);\r\n        lazySetupUnderway = false;\r\n\r\n        return __queueUpdate;\r\n    }\r\n\r\n    /**\r\n     * Handles the render output - which normally means flush it ot DOM.\r\n     * Override for different render libraries\r\n     *\r\n     * @protected\r\n     * @param renderOutput\r\n     */\r\n    _setView(renderOutput) {\r\n        let view = renderOutput;\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            view = prepareRenderedContent(renderOutput, this) || renderOutput;\r\n        }\r\n\r\n        // If it looks like html, then use innerHTML\r\n        if (\"string\" === typeof view) {\r\n            this.$ui.innerHTML = view;\r\n        } else {\r\n            this.$ui.textContent = \"\";\r\n            this.$ui.appendChild(view);\r\n        }\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n    //--------------------------------------------------------------\r\n\r\n    /**\r\n     * Called to initialize the component. At this point `this.$ui` has been set\r\n     * (to either `shadowRoot` or `this`), but nothing has ben rendered.\r\n     */\r\n    didInit() {\r\n        // FIXME: delete after v2\r\n        if (\"init\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.init() is Deprecated! Use .didInit()`);\r\n            }\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was mounted (attached to DOM)\r\n     */\r\n    didMount() {\r\n        // FIXME: delete after v2\r\n        if (\"ready\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.ready() is Deprecated! Use .didMount()`);\r\n            }\r\n            this.ready();\r\n        }\r\n        // FIXME: delete after v2\r\n        if (\"mounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.mounted() is Deprecated! Use .didMount()`);\r\n            }\r\n\r\n            // mounted() {}\r\n            this.mounted(); // FIXME: remove post v2\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component's render function is about to be called. if a `Boolean` `false` is\r\n     * returned, `render()` will be canceled.\r\n     * @return {Boolean}\r\n     */\r\n    willRender() {}\r\n\r\n    /**\r\n     * Render the Component's content.\r\n     *\r\n     * __IMPORTANT__: Note that by default, this view handler (`_setView`) does not support\r\n     * dynamic styles in polyfilled environments. Styles will be scooped only on first render.\r\n     *\r\n     * @return {String|HTMLElement|DocumentFragment}\r\n     */\r\n    render(){ return `<span></span>`; }\r\n\r\n    /**\r\n     * Component has been rendered and dates flushed to DOM\r\n     */\r\n    didRender() {}\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    didUnmount() {\r\n        // FIXME: delete after v2\r\n        if (\"unmounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.unmounted() is Deprecated! Use .didUnmount()`);\r\n            }\r\n            this.unmounted();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was destroyed (destroy callback were already called)\r\n     */\r\n    didDestroy() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} data\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        const eventNameLowercase = eventName.toLowerCase();\r\n        const event = new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        );\r\n\r\n        if (\"function\" === typeof this[eventNameLowercase]) {\r\n            this[eventNameLowercase](event);\r\n        }\r\n\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {Function}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return getState(this).ev.on(propName || EVENT_ANY, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ NATIVE METHODS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const state = getState(this);\r\n\r\n        if (state.destroyQueued) {\r\n            clearTimeout(state.destroyQueued);\r\n            state.destroyQueued = null;\r\n        }\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            styleComponentInstanceElement(this);\r\n        }\r\n\r\n        state.isMounted = true;\r\n        this.didMount();\r\n        this._queueUpdate();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n        }\r\n\r\n        this.didUnmount();\r\n    }\r\n}\r\n\r\nexport default ComponentElement;\r\n\r\nfunction setupComponent (component) {\r\n    const { useShadow, shadowMode } = component.constructor;\r\n    if (useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.onPropsChange(component._queueUpdate);\r\n    component.didInit();\r\n}\r\n\r\n// function __setupComponent(component) {\r\n//     const state = getState(component);\r\n//     let lastReadyState = null;\r\n//     const handleReadyChanges = () => {\r\n//         if (lastReadyState === state.ready) {\r\n//             return;\r\n//         }\r\n//\r\n//         lastReadyState = state.ready;\r\n//\r\n//         if (state.ready) {\r\n//             if (!state.hasTemplate) {\r\n//                 // component._$ui.innerHTML = component.constructor.template;\r\n//                 component._$ui.appendChild(\r\n//                     component.constructor.renderTemplate(component)\r\n//                 );\r\n//                 state.hasTemplate = true;\r\n//             }\r\n//\r\n//             component.didMount();\r\n//\r\n//             if (state.isMounted) {\r\n//                 component.didMount();\r\n//             }\r\n//         }\r\n//         else if (state.hasTemplate) {\r\n//             component.unready();\r\n//         }\r\n//\r\n//     };\r\n//\r\n//     if (component.constructor.useShadow && SHADOW_DOM_SUPPORTED) {\r\n//         if (component.shadowRoot) {\r\n//             component._$ui = component.shadowRoot;\r\n//         }\r\n//         else {\r\n//             component._$ui = component.attachShadow({ mode: component.constructor.shadowMode });\r\n//         }\r\n//     }\r\n//     else {\r\n//         component._$ui = component;\r\n//     }\r\n//\r\n//     component.didInit();\r\n//\r\n//     state.readyWatcher = objectWatchProp(state, \"ready\", handleReadyChanges);\r\n//     component.onDestroy(state.readyWatcher);\r\n//     handleReadyChanges();\r\n// }\r\n","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport { defineProperty, consoleWarn} from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype\"\r\nimport {getKebabCase, elementHasAttributeForProp} from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object|ComponentElement~PropDefinition} [options|Descriptor]\r\n *\r\n * @returns {Function|Descriptor}\r\n */\r\nexport function prop(options = {}) {\r\n    if (options.key && options.kind) {\r\n        return _propDecorator({}, options);\r\n    }\r\n    return _propDecorator.bind(null, options);\r\n}\r\n\r\nfunction _propDecorator(options, {key, initializer, descriptor}) {\r\n    const propDefinition = getPropSetup(\r\n        key,\r\n        initializer || descriptor.get,\r\n        descriptor.set,\r\n        options\r\n    );\r\n    const newDescriptor = getDecoratorDescriptor(key, key, propDefinition);\r\n\r\n    // Setup the aliases to proxy the values to the same `key`\r\n    if (propDefinition.aliases) {\r\n        newDescriptor.extras = propDefinition.aliases.map(aliasName => getDecoratorDescriptor(aliasName, key));\r\n    }\r\n\r\n    return newDescriptor;\r\n\r\n    //--------------------------------------------------------------------\r\n    // typical Descriptor, for something done like:\r\n    //          @prop myTest = \"value here\"\r\n    //  {\r\n    //     \"kind\": \"field\",\r\n    //     \"key\": \"myTest\",\r\n    //     \"placement\": \"field\",\r\n    //     \"initializer\": function(){ return \"value here\"; },\r\n    //     \"descriptor\": {\r\n    //         \"configurable\": true,\r\n    //         \"writable\": true,\r\n    //         \"enumerable\": true\r\n    //     }\r\n    // }\r\n    //--------------------------------------------------------------------\r\n}\r\n\r\nfunction getDecoratorDescriptor(key, proxyToPropName, componentPropDefinition) {\r\n    const DecoratorDescriptor = {\r\n        key,\r\n        kind: \"method\",\r\n        placement: \"prototype\",\r\n        descriptor: {\r\n            configurable: true,\r\n            get() {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName];\r\n            },\r\n            set(newValue) {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName] = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (componentPropDefinition) {\r\n        DecoratorDescriptor.finisher = function (Klass) {\r\n            // Create Class \"propsDef\" that inherits from super class\r\n            if (!Klass.hasOwnProperty(\"propsDef\")) {\r\n                defineProperty(\r\n                    Klass,\r\n                    \"propsDef\",\r\n                    objectExtend(Object.create(null), Klass.propsDef)\r\n                );\r\n            }\r\n            Klass.propsDef[key] = componentPropDefinition;\r\n        };\r\n    }\r\n\r\n    return DecoratorDescriptor;\r\n}\r\n\r\n\r\n/**\r\n * A property definition\r\n *\r\n * @private\r\n *\r\n * @param name\r\n * @param {Function} initializer\r\n * @param {Function} validator\r\n * @param {Object} propDef\r\n *\r\n * @returns {ComponentElement~PropDefinition}\r\n */\r\nfunction getPropSetup(name, initializer, validator, propDef) {\r\n    /**\r\n     * A Class prop definition\r\n     *\r\n     * @typedef {Object} ComponentElement~PropDefinition\r\n     * @property {String} name              Then name of the prop\r\n     * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n     * @property {Boolean} required         Is the prop required\r\n     * @property {Boolean} boolean          Is the prop value meant to be a boolean (note: also forces `attr` to true)\r\n     * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n     * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n     * @property {Array<String>} aliases    An array of aliases for the prop\r\n     */\r\n    const propertyDefinition = objectExtend(\r\n        {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: initializer || NOOP,\r\n            filter: validator || NOOP,\r\n            aliases: []\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        },\r\n        propDef\r\n    );\r\n\r\n    // If this is a boolean, then force `attr` to `true`, and\r\n    // redefine default adn filter values\r\n    if (propertyDefinition.boolean) {\r\n        propertyDefinition.attr = true;\r\n        propertyDefinition.default = propertyDefinition.filter = function () {\r\n            const response = elementHasAttributeForProp(this, propertyDefinition);\r\n\r\n            // DEV MODE assistance\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                // when attempting to set a value that differs from\r\n                // element.hasAttribute() - show warning in console\r\n                if (\r\n                    arguments.length &&\r\n                    (\r\n                        Boolean(\"string\" === typeof arguments[0]\r\n                            ? arguments[0] || 1\r\n                            : arguments[0]) !== response\r\n                    )\r\n                ) {\r\n                    consoleWarn(`'${this.constructor.name}#${name}|${propertyDefinition.aliases.join(\"|\")}' prop is setup as a Boolean Attr and can only be set via HTML attribute!`);\r\n                }\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n\r\n    // Add name lowercase alias - if applicable\r\n    if (name.toLowerCase() !== name) {\r\n        propertyDefinition.aliases.push(name.toLowerCase());\r\n    }\r\n\r\n    // If the prop name has upper case letters, then its possible that it is\r\n    // defined as camelCase - create ka-bab alias.\r\n    if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n        propertyDefinition.aliases.push(getKebabCase(name));\r\n    }\r\n\r\n    return propertyDefinition;\r\n}\r\n","import {defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\n/**\r\n * Binds the given method to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(options) {\r\n    if (options.key && options.kind) {\r\n        return _bound(options);\r\n    }\r\n    return _bound;\r\n}\r\n\r\nfunction _bound(decoratorDescriptor) {\r\n    const {kind, key, descriptor} = decoratorDescriptor;\r\n    if (kind === \"method\" && descriptor.value) {\r\n        let isDoingLazySetup = false; // Fuck you IE!\r\n        const method = descriptor.value;\r\n\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            throwIfThisIsPrototype(this);\r\n\r\n            if (isDoingLazySetup) {\r\n                return;\r\n            }\r\n            isDoingLazySetup = true;\r\n\r\n            const boundMethod = method.bind(this);\r\n            defineProperty(this, key, boundMethod);\r\n            isDoingLazySetup = false;\r\n\r\n            return boundMethod;\r\n        }\r\n    }\r\n\r\n    return decoratorDescriptor;\r\n\r\n    // {\r\n    //     \"kind\": \"method\",\r\n    //     \"key\": \"private\",\r\n    //     \"placement\": \"prototype\",\r\n    //     \"descriptor\": {\r\n    //         \"writable\": true,\r\n    //         \"configurable\": true,\r\n    //         \"enumerable\": false,\r\n    //         \"value\": function(){}\r\n    //     }\r\n    // }\r\n}\r\n","export * from \"./ComponentElement.js\"\r\nexport * from \"./decorators/prop.js\"\r\nexport * from \"./decorators/bind.js\"\r\nexport {\r\n    getState,\r\n    STATE_SYMBOL\r\n} from \"./utils\"\r\nexport { ComponentElement as default } from \"./ComponentElement.js\"\r\n\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","/**\r\n * Given an HTML Element and a selector, this method will return\r\n * a Boolean indicating if Element matches selector.\r\n *\r\n * @function domMatches\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} selector\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domMatches(el, selector) {\r\n    if (!el || !selector) {\r\n        return false;\r\n    }\r\n    return (\r\n        el.matches              ||\r\n        el.matchesSelector      ||\r\n        el.msMatchesSelector    ||\r\n        el.mozMatchesSelector   ||\r\n        el.webkitMatchesSelector||\r\n        el.oMatchesSelector\r\n    ).call(el, selector);\r\n}\r\nexport default domMatches;","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n\r\n    objectDefineProperty(obj, prop, descriptor);\r\n\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);","\r\n/*\r\n    All colors are normally defined starting with the lightest one\r\n*/\r\n\r\nexport const varsDefault = Object.freeze({\r\n    //---------------------------------------------------------------\r\n    //                                                  COLORS\r\n    //---------------------------------------------------------------\r\n\r\n    /* == PRIMARY COLORS == */\r\n    \"--theme-color-0\": \"#FFFFFF\",\r\n    \"--theme-color-1\": \"#ECECEC\",\r\n    \"--theme-color-2\": \"#DCDCDC\",\r\n    \"--theme-color-3\": \"#C5C5C5\",\r\n    \"--theme-color-4\": \"#ADADAD\",\r\n    \"--theme-color-5\": \"#8A8A8A\",\r\n    \"--theme-color-6\": \"#656565\",\r\n    \"--theme-color-7\": \"#565656\",\r\n    \"--theme-color-8\": \"#2D2D2D\",\r\n    \"--theme-color-9\": \"#000000\",\r\n\r\n    /* == SECONDARY COLOR: info (usually in the blue color) == */\r\n    \"--theme-color-accent-info-0\": \"#def3ff\",\r\n    \"--theme-color-accent-info-1\": \"#bee1f4\",\r\n    \"--theme-color-accent-info-2\": \"#39a5dc\",\r\n    \"--theme-color-accent-info-3\": \"#0088ce\",\r\n    \"--theme-color-accent-info-4\": \"#00659c\",\r\n\r\n\r\n    /* == SECONDARY COLOR: success (usually in the green color) == */\r\n    \"--theme-color-accent-success-0\": \"#cfe7cd\",\r\n    \"--theme-color-accent-success-1\": \"#9ecf99\",\r\n    \"--theme-color-accent-success-2\": \"#6ec664\",\r\n    \"--theme-color-accent-success-3\": \"#3f9c35\",\r\n    \"--theme-color-accent-success-4\": \"#2d7623\",\r\n\r\n\r\n    /* == SECONDARY COLOR: alert (usually in the Yellow color) == */\r\n    /*    https://coolors.co/fcf6e3-f9e4a4-f9d463-f9c62c-dda600     */\r\n    \"--theme-color-accent-alert-0\": \"#fcf6e3\",\r\n    \"--theme-color-accent-alert-1\": \"#f9e4a4\",\r\n    \"--theme-color-accent-alert-2\": \"#f9d463\",\r\n    \"--theme-color-accent-alert-3\": \"#f9c62c\",\r\n    \"--theme-color-accent-alert-4\": \"#dda600\",\r\n\r\n    /* == SECONDARY COLOR: warning (usually in the orange color) == */\r\n    /*    https://coolors.co/ffe2af-ffc57a-ffa86b-ff8330-f4581f     */\r\n    \"--theme-color-accent-warning-0\": \"#ffe2af\",\r\n    \"--theme-color-accent-warning-1\": \"#ffc57a\",\r\n    \"--theme-color-accent-warning-2\": \"#ffa86b\",\r\n    \"--theme-color-accent-warning-3\": \"#ff8330\",\r\n    \"--theme-color-accent-warning-4\": \"#f4581f\",\r\n\r\n\r\n    /* == SECONDARY COLOR: error (usually in the error color) == */\r\n    /*    https://coolors.co/f9caca-ff7a7a-ff4b4b-ff171a-bd1818  */\r\n    \"--theme-color-accent-error-0\": \"#F9CACA\",\r\n    \"--theme-color-accent-error-1\": \"#FF7A7A\",\r\n    \"--theme-color-accent-error-2\": \"#FF4B4B\",\r\n    \"--theme-color-accent-error-3\": \"#FF171A\",\r\n    \"--theme-color-accent-error-4\": \"#BD1818\",\r\n\r\n\r\n    /* == BACKGROUND / FORGROUND == */\r\n    \"--theme-color-bg\": \"var(--theme-color-0)\",\r\n    \"--theme-color-fg\": \"var(--theme-color-8)\",\r\n\r\n    /* == LINKS == */\r\n    \"--theme-color-link\": \"var(--theme-color-accent-info-3)\",\r\n\r\n    /* == MESSAGES == */\r\n    \"--theme-color-msg-success-bg\": \"var(--theme-color-accent-success-0)\",\r\n    \"--theme-color-msg-success-fg\": \"var(--theme-color-accent-success-4)\",\r\n\r\n    \"--theme-color-msg-alert-bg\": \"var(--theme-color-accent-alert-0)\",\r\n    \"--theme-color-msg-alert-fg\": \"var(--theme-color-accent-alert-4)\",\r\n\r\n    \"--theme-color-msg-warning-bg\": \"var(--theme-color-accent-warning-0)\",\r\n    \"--theme-color-msg-warning-fg\": \"var(--theme-color-accent-warning-4)\",\r\n\r\n    \"--theme-color-msg-info-bg\": \"var(--theme-color-accent-info-0)\",\r\n    \"--theme-color-msg-info-fg\": \"var(--theme-color-accent-info-4)\",\r\n\r\n    \"--theme-color-msg-error-bg\": \"var(--theme-color-accent-error-0)\",\r\n    \"--theme-color-msg-error-fg\": \"var(--theme-color-accent-error-4)\",\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                                  FONTS\r\n    //---------------------------------------------------------------\r\n    \"--theme-font-size-xxl\": \"28px\",\r\n    \"--theme-font-size-xl\": \"22px\",\r\n    \"--theme-font-size-l\": \"18px\",\r\n    \"--theme-font-size-m\": \"16px\",\r\n    \"--theme-font-size-s\": \"14px\",\r\n    \"--theme-font-size-xs\": \"11px\",\r\n\r\n    \"--theme-font-size\": \"var(--theme-font-size-m)\",\r\n\r\n    \"--theme-font-family\": \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n    \"--theme-font-family-monospace\": \"SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace\",\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                                  BORDERS\r\n    //---------------------------------------------------------------\r\n    \"--theme-border-style\": \"solid\",\r\n    \"--theme-border-width\": \"1px\",\r\n\r\n    \"--theme-border-color\": \"var(--theme-color-5)\",\r\n    \"--theme-border-color-light\": \"var(--theme-color-4)\",\r\n\r\n    \"--theme-border-radius-sm\": \"3px\",\r\n    \"--theme-border-radius-md\": \"6px\",\r\n    \"--theme-border-radius-lg\": \"12px\",\r\n    \"--theme-border-radius-xl\": \"24px\",\r\n    \"--theme-border-radius\": \"var(--theme-border-radius-md)\",\r\n\r\n    \"--theme-border\": \"var(--theme-border-width) var(--theme-border-style) var(--theme-border-color)\",\r\n    \"--theme-border-light\": \"var(--theme-border-width) var(--theme-border-style) var(--theme-border-color-light)\",\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                     SPACING AND PADDING\r\n    //---------------------------------------------------------------\r\n    \"--theme-spacing-0\": \"0\",\r\n    \"--theme-spacing-1\": \"0.25rem\",\r\n    \"--theme-spacing-2\": \"0.5rem\",\r\n    \"--theme-spacing-3\": \"0.75rem\",\r\n    \"--theme-spacing-4\": \"1rem\",\r\n    \"--theme-spacing-5\": \"1.25rem\",\r\n    \"--theme-spacing-6\": \"1.5rem\",\r\n    \"--theme-spacing-7\": \"1.75rem\",\r\n    \"--theme-spacing-8\": \"2rem\",\r\n    \"--theme-spacing-9\": \"2.25rem\",\r\n    \"--theme-spacing\": \"var(--theme-spacing-2)\", // default\r\n\r\n\r\n    //---------------------------------------------------------------\r\n    //                                              AFFECTS\r\n    //---------------------------------------------------------------\r\n    \"--theme-box-shadow-n\": \"0 -8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow-e\": \"8px 0 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow-s\": \"0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow-w\": \"-8px 0 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.2)\",\r\n    \"--theme-box-shadow\": \"var(--theme-box-shadow-s)\"\r\n});\r\n","import {ComponentElement, prop, bind, STATE_SYMBOL} from \"@purtuga/component-element\"\r\nimport {domFind} from \"@purtuga/common/src/domutils/domFind\"\r\nimport {domMatches} from \"@purtuga/common/src/domutils/domMatches\"\r\nimport {\r\n    objectKeys,\r\n    doc,\r\n    createTextNode,\r\n    createElement,\r\n    appendChild\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {varsDefault} from \"./vars-default\";\r\n\r\n//=========================================================================\r\nexport const VERSION = BUILD.DATA.VERSION; // eslint-disable-line\r\nconst CSS_VAR_LIST = objectKeys(varsDefault);\r\nconst VARS_DEFAULT_STYLESHEET = CSS_VAR_LIST.reduce((allVars, varName) => {\r\n    allVars += `${varName}: ${varsDefault[varName]};` + \"\\n\";\r\n    return allVars;\r\n}, \"\");\r\nconst toCssPropertiesString = varsObject => {\r\n    return Object\r\n        .entries(varsObject)\r\n        .reduce((str, [property, value]) => (str += `${property}: ${value};`), \"\");\r\n};\r\nconst isRootHtmlElement = ele => domMatches(ele, \":root\");\r\n\r\n/**\r\n * An element that exposes several CSS variables that can be controlled and thus affect\r\n * the inner elements. Use it for styling common widgets\r\n *\r\n * @listens CssVars#set-vars\r\n * @fires CssVars#change\r\n */\r\nexport class CssVars extends ComponentElement {\r\n    static tagName = \"css-vars\";\r\n\r\n    /**\r\n     * Returns an object with the default variables and associated values\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    static defaultVars = varsDefault;\r\n\r\n    /**\r\n     * Returns an array with all the css var names\r\n     *\r\n     * @type {Array}\r\n     */\r\n    static get varNames() {\r\n        return CSS_VAR_LIST.slice(0);\r\n    }\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n:host {\r\n    display: block;\r\n}\r\n</style>\r\n<style vars>\r\n:host {\r\n    ${VARS_DEFAULT_STYLESHEET}\r\n}\r\n</style>\r\n<slot></slot>`;\r\n    }\r\n\r\n    /**\r\n     * The set of props that should be set to the Element. Use this to set custom set of\r\n     * var, thus enabling the creation of different themes.\r\n     *\r\n     * @property\r\n     * @type {Object}\r\n     */\r\n    @prop\r\n    get vars() {\r\n        return varsDefault;\r\n    }\r\n    set vars(newVars) {\r\n        if (\"object\" !== typeof newVars) {\r\n            console.warn(\"vars prop must be an object!\"); // eslint-disable-line\r\n            newVars = {};\r\n        }\r\n        return newVars;\r\n    }\r\n\r\n\r\n    /**\r\n     * A DOM selector to where the css vars will also be set. This will be in addition to\r\n     * setting the vars on this element itself.\r\n     * If defined as a string, then its assume to be a css selector.  Value can also be\r\n     * set as a DOM element or Style element. When a Style Element is used, the entire\r\n     * Style element's content will be manipulated, so it should be one that does not\r\n     * already contain defintions.\r\n     *\r\n     * @property\r\n     * @type {String|HTMLElement|HTMLStyleElement}\r\n     * @example\r\n     *\r\n     * <css-vars target\":root\"></css-vars>\r\n     */\r\n    @prop({attr: true})\r\n    get target() {\r\n        return null;\r\n    }\r\n\r\n    didInit() {\r\n        this[STATE_SYMBOL] = {\r\n            priorTarget: null,\r\n            /** @type Array<HTMLElement> */\r\n            $targets: null,\r\n            $style: null\r\n        };\r\n\r\n        this.on(\"themeChange\", this);\r\n\r\n        // When `vars` change - set vars that were provided\r\n        this.onPropsChange(this._handleCustomVarsChange, \"vars\");\r\n\r\n        // When `target` changes, clean out existing <style> tag for defaults and apply new one\r\n        this.onPropsChange(this._handleTargetChange, \"target\");\r\n    }\r\n\r\n    didRender() {\r\n        this._varStyleEle = this.$(\"style[vars]\");\r\n        this._handleCustomVarsChange();\r\n        this._handleTargetChange();\r\n    }\r\n\r\n    didUnmount() {\r\n        clearCustomVarsFromTargetElements(this);\r\n        stopPushingStylesToTargets(this);\r\n    }\r\n\r\n    @bind\r\n    _handleCustomVarsChange() {\r\n        clearCustomVars(this, this.vars, false);\r\n        setCustomVars(this, this.props.vars);\r\n\r\n        clearCustomVarsFromTargetElements(this);\r\n        setCustomVarsOnTargetElements(this);\r\n    }\r\n\r\n    @bind\r\n    _handleTargetChange() {\r\n        // Tear down and create new (if applicable) default styles for selector\r\n        if (this[STATE_SYMBOL].priorTarget && this[STATE_SYMBOL].priorTarget !== this.props.target) {\r\n            clearCustomVarsFromTargetElements(this);\r\n            stopPushingStylesToTargets(this);\r\n        }\r\n\r\n        if (this.props.target) {\r\n            setCustomVarsOnTargetElements(this);\r\n        }\r\n    }\r\n\r\n    handleEvent(ev) {\r\n        if (ev.type === \"themeChange\" && ev.detail) {\r\n            this.clear();\r\n            this.props.vars = ev.detail && ev.detail.theme ? ev.detail.theme : ev.detail;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clears the current set of css vars from the element that\r\n     * were applied outside of the default\r\n     * (essentially: clears out props.vars object)\r\n     */\r\n    clear() {\r\n        if (this.props.vars) {\r\n            clearCustomVars(this, this.props.vars);\r\n        }\r\n        this.props.vars = {};\r\n    }\r\n\r\n    /**\r\n     * List of all CSS variables set/used by this Element\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    getVarNames() {\r\n        return this.constructor.varNames;\r\n    }\r\n}\r\n\r\nfunction setCustomVars(ele, vars, emit = true) {\r\n    const varsKeys = objectKeys(vars);\r\n\r\n    if (varsKeys.length) {\r\n        // Is it a CssVars element? if so, then set on internal <style> elememt\r\n        if (ele._varStyleEle) {\r\n            ele._varStyleEle.innerHTML = \"\";\r\n            appendChild(\r\n                ele._varStyleEle,\r\n                createTextNode(`\r\n:host {\r\n${ toCssPropertiesString(vars) }\r\n}\r\n`\r\n                )\r\n            );\r\n\r\n            // Is it A STYLE tag?, then replace its content\r\n        } else if (ele.tagName === \"STYLE\") {\r\n            ele.innerHTML = \"\";\r\n            appendChild(ele, createTextNode(`\r\n:root {\r\n${ toCssPropertiesString(vars) } \r\n}\r\n`));\r\n            // ELSE: set directly on the element\r\n        } else {\r\n            varsKeys.forEach(varName => {\r\n                ele.style.setProperty(varName, vars[varName]);\r\n            });\r\n        }\r\n\r\n        if (emit && ele.emit) {\r\n            /**\r\n             * Style variables have changed\r\n             * @event CssVars#change\r\n             */\r\n            ele.emit(\"change\", null, {bubble: true});\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearCustomVars(ele, vars, emit = true) {\r\n    const varsKeys = objectKeys(vars);\r\n\r\n    if (varsKeys.length) {\r\n        varsKeys.forEach(cssPropName => {\r\n            if (ele.tagName === \"STYLE\") {\r\n                ele.innerHTML = \"\";\r\n            } else {\r\n                ele.style.removeProperty(cssPropName);\r\n            }\r\n        });\r\n\r\n        if (emit && ele.emit) {\r\n            ele.emit(\"change\", null, {bubble: true});\r\n        }\r\n    }\r\n}\r\n\r\nfunction setCustomVarsOnTargetElements(cssVarsInst) {\r\n    const state = cssVarsInst[STATE_SYMBOL];\r\n    const {target, vars} = cssVarsInst.props;\r\n\r\n    if (target) {\r\n        if (!state.$targets) {\r\n            if (\"string\" === typeof target) {\r\n                state.$targets = domFind(doc, target);\r\n            } else {\r\n                state.$targets = [target];\r\n            }\r\n        }\r\n\r\n        state.$targets.forEach(targetEle => {\r\n            // :root is treated differently\r\n            if (isRootHtmlElement(targetEle)) {\r\n                // If no defaults are yet created for this target, do it now\r\n                if (!state.$style) {\r\n                    state.$style = createStyleElement(\"\");\r\n                }\r\n                targetEle = state.$style;\r\n            }\r\n\r\n            setCustomVars(targetEle, vars, false);\r\n        });\r\n\r\n        cssVarsInst[STATE_SYMBOL].priorTarget = target;\r\n    }\r\n}\r\n\r\nfunction clearCustomVarsFromTargetElements(cssVarsInst) {\r\n    const state = cssVarsInst[STATE_SYMBOL];\r\n\r\n    if (state.$targets) {\r\n        state.$targets.forEach(targetEle => {\r\n            if (isRootHtmlElement(targetEle)) {\r\n                targetEle = state.$style;\r\n            }\r\n            clearCustomVars(targetEle, cssVarsInst.props.vars, false);\r\n        });\r\n    }\r\n}\r\n\r\nfunction stopPushingStylesToTargets(cssVarsInst) {\r\n    const state = cssVarsInst[STATE_SYMBOL];\r\n    if (state.$style) {\r\n        state.$style.parentNode.removeChild(state.$style);\r\n        state.$style = null;\r\n    }\r\n    if (state.$targets) {\r\n        state.$targets = null;\r\n    }\r\n}\r\n\r\nfunction createStyleElement(stylesheetContent) {\r\n    const style = createElement(\"style\");\r\n    const head = doc.head;\r\n\r\n    style.type = \"text/css\";\r\n    appendChild(style, createTextNode(stylesheetContent));\r\n\r\n    if (head.hasChildNodes()) {\r\n        head.insertBefore(style, head.firstChild)\r\n    } else {\r\n        appendChild(head, style);\r\n    }\r\n\r\n    return style;\r\n}\r\n\r\nexport default CssVars;\r\n","// Registers Custom Element on the global registry with default tagName\r\nimport {CssVars} from \"./CssVars\";\r\nCssVars.define();"],"sourceRoot":""}